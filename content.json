[{"title":"相片处理VSCO Cam v18全滤镜特别版","date":"2017-02-06T07:43:32.000Z","path":"archives/vsco/","text":"VSCO Cam – 一款依托强大滤镜功能的相片处理应用程序。 VSCO Cam来自VSCO（Visual Supply Co.的简写），在移动应用领域取得成功之前，该公司就一直从事数码照片美化工作，其为Adobe Lightroom 和苹果Aperture开发的著名色彩插件VSCO Film非常受欢迎。其iOS版也曾在苹果的App Store中排名榜首，现在VSCO Cam安卓版的推出将让更多的用户领略到这款软件的魅力。 与普通照片拍摄加后期处理的软件不同，VSCO Cam的滤镜能够将拍摄的照片呈现出最接近传统胶片的效果。VSCO Cam几乎包含了VSCO Film的全部胶片色彩风格，利用它处理过的照片照片文艺范十足。 如果说Instagram的目的是让手机拍出好看好看的照片，那VSCO Cam寻求的就是真实感，并逼真的模仿出胶片的风格和色彩效果，比如柯达Porta，逼真的再现了胶片的拍摄风格和色彩。 使用任何一款VSCO的滤镜，都能够使照片模拟出不同胶片拍出来的效果。比如，C3滤镜通过使用拥有鲜亮活泼的色彩对比和绿色色调模仿富士生胶底片的效果；LV1滤镜则能够模仿经典幻灯片的效果。 功能特点： 创作利用出众的移动预设和高级相机控制功能，拍照并编辑图像。发布图片或在您的 VSCO 个人资料中精心展出其他作品。 发现探索关注对象发表的作品、来自社区的精选作品以及来自 VSCO Originals 的独家编辑内容。 交流加入 VSCO 社区。查找并关注好友以及世界各地的用户。 国际惯例：介绍截图没有更新 12345更新日志：v18:• 优化游戏杆导航地图什么鬼• 启用离线功能什么鬼• Bug fixes这个必须有 来源：http://vsco.coGoogle Play：https://play.google.com/store/apps/details?id=com.vsco.cam 修改说明： 免Root直装，解锁120余款收费滤镜 精简语言 apk包体积优化 Zipalign对齐优化 特别感谢俄国小伙伴CrYsTAxiT提供破解思路 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"破解","slug":"破解","permalink":"http://vioren.space/tags/破解/"}]},{"title":"没有比打Emoji台球更惬意的事了(gif)","date":"2017-01-30T15:20:00.000Z","path":"archives/poolmoji/","text":"当数字艺术家jean-baptiste le divelec在工作中发现一个新的台球桌，他决定和他的一群朋友做一些有意思的事情——创造一些特殊的台球。借鉴时下无处不在的emoji表情符，他的团队手绘了15颗emoji台球，称之为“poolmoji”，并拍下gif动图，比起台球运动本身，它们则更生动可爱，十分有趣，让我们来看看吧~ 我不想死~ 好折磨啊~ 哎哟哟~ 明天见~ 别别别别别~别碰我 等等我呀~ 不准再这样了~ 啊哦~ 爆头一击~ 同志们辛苦啦~ 张小明，出列！ 谁能体会单身狗的悲伤T T 终于解散了~ 你瞅啥~ 同桌你好~ 幕后制作 Winigreeni正在认真工作 Emoji 完成中… via boredpanda，designboom","tags":[{"name":"宇宙之大","slug":"宇宙之大","permalink":"http://vioren.space/tags/宇宙之大/"}]},{"title":"照片编辑器Photo Editor Pro v2.3特别精简版","date":"2017-01-20T17:29:20.000Z","path":"archives/photoeditor/","text":"Photo Editor Pro – 一款轻量级简单易用的照片处理应用程序。 调整照片的颜色，旋转、裁剪、调整大小、添加效果、相框，并可在照片上涂鸦。颜色调整选项包括色相、饱和度、对比度、和亮度。此外，Photo Editor为您的照片提供了各种各样的效果，包括伽玛校正、自动对比度、自动色阶、模糊、锐化、油性涂料、素描、黑 &amp; 白高对比度、深棕，等等。 功能特点： 调整照片的颜色，旋转、裁剪、调整大小、添加效果、相框，并可在照片上涂鸦。 使用曲线微调颜色。 涂鸦模式，添加文本或图片。 轻松旋转，剪裁或调整照片大小。 使用触摸和双指绽放界面轻松编辑照片。 从图库或相机载入照片。 保存照片为JPEG和PNG格式。灵活控制 JPEG品质。 查看、编辑或删除EXIF数据。 保存你的最终成果到图库或SD卡，或将其设置为壁纸。 国际惯例：介绍截图没有更新 123456789101112131415161718192021更新日志：v2.3:• Text/Image: Image background &amp; padding• Tools: PDF Capture (Lollipop+)• Bug fixesv2.2.1:• Bug fixesv2.2:• Text/Image: Gradient improvements• Bug fixesv2.1:• Text/Image: Emoji support (KitKat+)• Drawing: Emoji support (KitKat+)• Pixel Editor• Bug fixesv2.0.1:• Bug fixesv2.0:• Android 7.0 Nougat support• Layout improvements• Bug fixes 来源：https://www.iudesk.comGoogle Play：https://play.google.com/store/apps/details?id=com.iudesk.android.photo.editor 修改说明： 极致精简，全包仅1.65M，不影响稳定性 去除广告，解锁专业版 TinyPNG算法优化，7zip极限压缩 剔除无用菜单项，8宫变7宫 精简语言并剔除相关选项 彻底剔除Google sdk，告别Google服务检查和notify提醒 剔除无用权限，安安静静做本地app 去除第三方市场检测更新 Zipalign对齐优化 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"汉化","slug":"汉化","permalink":"http://vioren.space/tags/汉化/"},{"name":"破解","slug":"破解","permalink":"http://vioren.space/tags/破解/"}]},{"title":"利用IDA简单过so签名校验","date":"2017-01-16T10:36:09.000Z","path":"archives/idasignature/","text":"核心：破解安卓NDK端native方法动态JNI反射的so文件签名校验 分析之前，关于Android的签名机制就略过啦，先简单恶补一下Android签名校验的方式，方便小白理解。 在讲签名校验的方式前，需要先明确dex文件校验和签名校验：1、将apk以压缩包的形式打开删除原签名后，再签名，安装能够正常打开，但是用IDE工具反编译(classes.dex)后再二次打包，却出现非正常情况的，如：闪退/弹出非正版提示框。可以确定是dex文件校验。2、将apk以压缩包的形式打开删除原签名再签名，安装之后打开异常的，则基本可以断定是签名检验。如果在断网的情况下同样是会出现异常，则是本地的签名检验。如果首先出现的是提示网络没有连接，则是服务器端的签名校验。 对于Android编程我们知道分为SDK编程和NDK编程，当然Android签名校验也都是通过SDK或NDK来实现的。SDK编程也就是我们通常所说的java端的即编译出来的classes.dex静态校验，NDK编程也就是C / C++端的即编译出来的*.so动态加载的校验。 总之，Java层一般通过getPackageManager().getPackageInfo.signatures来获取签名信息。NDK层一般调用Native方法/DLL/Lua脚本等通过获取Java的context/Activity对象，动态JNI反射调用getPackageInfo等来获取签名。 好了，话不多说，切入正题。 群里聊天，小伙伴找我去除某款图像处理软件的广告，介于此软件已一年未更新，且互联网上出现的修改版均无法使用。。。。那么。。开搞。。。。 apk重签名，闪退，断定有签名校验。直接拖入AndroidKiller大法，一段等待之后反编译完毕。 因为没有错误提示，那么对整个项目搜索1signatures 或1[Landroid/content/pm/Signature 或1Landroid/content/pm/PackageInfo;-&gt;signatures:[Landroid/content/pm/Signature 或1Ljava/security/Signature;-&gt;verify([B)Z 等一系列可能调用或者判断签名的方法我们基本找到四处可能为签名对比函数的验证，我们让其强制返回true。 满心欢喜的回编译，安装。。。。。结果。。依旧闪退。。。内心无数匹你懂得马奔驰而过。。。。 看到\\lib目录和\\assets\\lib目录下的.so文件，我倒是有些怀疑悬疑在.so动态文件中。 继续对整个项目搜索1loadLibrary 或1Ljava/lang/System;-&gt;loadLibrary(Ljava/lang/String;)V 等一系列读取.so文件的方法我们得到了三个结果，前两个是图像处理的lib，第三个嘛。。。别急啊！先等等。。。 以armeabi-v7a架构为例，我们把所有lib都弄到一起，用EditPlus或者UltraEdit呀notepad++呀之类的编辑器来全局搜索signature 看看我们得到了什么~我的天哪，有戏啊！ 说时迟那时快，我的IDA已经饥渴难耐。 New-Open-Ok一气呵成！ 打开文本查找： 搜索signature 勾选上Find all occurences 搜索完毕，没什么说的，妥妥的在5个Function中找到 双击第一个Function跳过去 右键选择Graph view切换图形视图 通过视图，我们找到了一个关键跳转（可以通过Ctrl+鼠标滑轮来调整视图缩放） 右键选择Text view切换回文本视图 其对应的就是文本视图界面中的 F5看一下C语言代码（这样做的前提是，你的IDA Pro必须支持F5功能） 通过分析C代码我们得知这里将获取到的签名信息进行判断，由此我们得知BEQ指令就是问是不是不相等，不相等那么为真的意思。而查阅之后印证了我们的判断： BEQ指令是“相等（或为0）跳转指令”，BNE指令是“不相等（或不为0）跳转指令”，B指令是“无条件跳转指令”，CBZ 指令是“比较，为零则跳转”，CBNZ指令是“比较，为非零则跳转”。 通过工具，我们发现： BNE跳转指令对应的HEX机器码是D1，BEQ跳转指令对应的HEX机器码是D0，CBZ跳转指令对应的HEX机器码是B1，CBNZ跳转指令对应的HEX机器码是B9。 回过头来，简单的看一下指令流程，BEQ下面是exit方法，则说明不能跳转指令为签名验证失败，反向逻辑一下，把BEQ指令改为相反的BNE指令即可。 修改方式一：我们可以在HEX界面右键Edit将D0改为D1，再右键Apply changes来保存修改，需要注意的是，在IDA中的修改仅仅是为了验证我们修改的正确与否，源文件并不会改变，我们可以定位修改位置后再利用010Editor、UltraEdit等编辑器来对源文件进行修改。 验证发现BEQ已经修改为BNE 修改方式二：当然，强大的IDA怎么可能没有修改后保存的功能呢。我们可以使用Edit-&gt;Patch Program菜单来方便的进行修改保存。（需要注意的是，Patch Program菜单是GUI版本的IDA的一项隐藏功能，用户需要编辑idagui.cfg配置文件才能激活该菜单， 编辑IDA配置文件cfg目录下的idagui.cfg，修改DISPLAY_PATCH_SUBMENU=YES，重启IDA即可） 首先我们在IDA View 中显示十六进制机器码, Options -&gt; General -&gt; Disassembly -&gt; Number of opcode bytes = 8 然后Edit-&gt;Patch Program-&gt;Change byte 将D0改为D1，OK 然后Edit-&gt;Patch Program-&gt;Apple patches to input file OK即可 同理，我们找到其他方法中的跳转点来进行反向逻辑，保存so文件，覆盖原文件，回编译，安装。完美运行~ 具体去广告过程不是本次重点所以就不再过多陈述，另外说一点sdk23以上的权限请求问题，当过完签名校验并去除广告后，当要读取图库照片来进行处理时，原本应该进行文件存储的权限请求，但是此时却FC了，当我手动给予权限后才正常。想想就苦恼，让人安装后边还得手动给权限。。。。 不行，我们得解决了它。我们知道如果APP运行在Android 6.0或以上版本的手机，并且target sdk&gt;=23，那么在使用一些相对敏感的权限时，需要征求用户的许可。比如读写sdcard，摄像，联系人信息等。 这是Android 6.0，在原有的AndroidManifest.xml声明权限的基础上，新增了运行时权限动态检测。不过为了兼容性，Android为targetSdkVersion小于23的应用默认授予了所申请的所有权限，所以如果你以前的APP设置的targetSdkVersion低于23，也能正常使用。等于或者大于23，则必须 request permission,否则会崩溃闪退。 当我们用apktool反编译后破坏了complierSdkversion的值，我们可以在apktool.yml中的sdkInfo中添加complierSdkversion: &#39;23&#39;，或者干脆我们索性将targetSdkVersion设置为22，默认给它权限就好了。(complierSdkversion的值和targetSdkVersion的值一定要统一，不然会出错) 修改apktool.yml文件完美解决~ 步骤回顾：1、反编译apk2、利用关键词查找签名调用3、IDA静态调试分析4、了解arm指令详情作用5、修改逻辑跳转绕过签名校验 总结：本文主要介绍破解安卓NDK端native方法动态JNI反射so文件签名校验的方法。","tags":[{"name":"Android","slug":"Android","permalink":"http://vioren.space/tags/Android/"},{"name":"逆向札记","slug":"逆向札记","permalink":"http://vioren.space/tags/逆向札记/"}]},{"title":"图片处理Pixlr Express v3.0.3独家去广告破解版","date":"2017-01-14T14:58:20.000Z","path":"archives/pixlr/","text":"Pixlr Express – 一款适合每个人的照片编辑器：不论您是从未编辑过照片的新人，还是一名专业人士，Pixlr 均可提供您需要的所有工具和特效。 Pixlr Express图片处理是Autodesk推出的一款免费安卓图片处理软件，内置600多种特效及滤镜，包含了优秀免费修图软体常见的特效滤镜套用、曝光对比调整、相框与特殊光线外挂等等，但又更进一步的，加入了像是去除红眼、去除特定颜色、去除噪点或锐利化、加上白光、移轴镜等等功能，而且每种功能、每个特效都提供了细部调整，让一般用户也能简单把特效变得更专业。 功能特点： 通过各种布局、背景和间距选项，创建照片拼贴。 借助“自动修复”，轻松单击一下即可平衡颜色。 使用“双重曝光”逐层放置多张照片并将其混合在一起，以获得独特的外观。 对图像进行样式化，使其看起来像是铅笔画、水墨草图、海报，等等。 使用简单的工具去除污点和红眼或者对牙齿进行美白，使您的自拍照看起来很漂亮。 使用“局部彩色”专注于某一颜色，或使用“焦点模糊”添加效果。 从一系列特效包中进行选择，为图像添加所需的外观和感觉。 利用叠加调整照片感受效果 – 增强色调、降低色调或增加梦幻般的提亮。 使用字幕为照片设置遮罩效果，或者用多种字体的文本叠加图像。 使用右侧边框完成编辑过程 – 选取适合您的样式。 利用我们不断增长的其他特效、叠加和边框包目录，保持新鲜感。 使用“收藏夹”按钮跟踪您收藏的特效和叠加。 在编辑后快速、灵活地调整图像大小。 通过社交媒体或电子邮件，直接与朋友分享您的照片。 123456789更新日志：v3.0.3- Better Android 6.0 support: ripple, doze &amp; runtime permission check- Bug fixesv3.0.2- Improved the performance of the double exposure and eraser tools.- Fixed a crash with collage when re-selecting images.- We also squashed a few bugs in this release. 来源：http://pixlr.comGoogle Play：https://play.google.com/store/apps/details?id=com.pixlr.express 修改说明： 破解NDK动态JNI反射签名校验。 解锁专业版，去除广告。 禁用mixpanel隐私统计。 精简语言包，剔除无用设置项。 zipalign对齐优化、apk包体积优化。 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"破解","slug":"破解","permalink":"http://vioren.space/tags/破解/"}]},{"title":"克隆相机Clone Camera v2.2/v2.3精简破解版","date":"2016-12-15T14:29:20.000Z","path":"archives/clonecamera/","text":"Clone Camera – 一款方便快捷克隆物体制作炫酷照片的应用。 Clone Camera是一款趣味照相应用，通过这款应用，我们可以将照片中的人或物体复制，在同个场景中创造最多四个相同的影像。而使用者不需要懂得复杂的P图技巧，只需要简单的几步，就可以制作出富有创意的摄影作品。 功能特点： 无比震撼的克隆照片 增强型自拍功能 众多滤镜可供选择 帮助你首次尝试的入门指南 支持高质量照片 1234567更新日志：Version 2.2:· Added Special tutorials· Support Chinese· Support more devices.· Minor bug fixes. 来源：http://www.peta-vision.comGoogle Play：https://play.google.com/store/apps/details?id=com.petavision.clonecameraplaystore 修改说明： 精简多余代码文件和资源文件 破解完整功能，激活全部图文教程 去除广告，剔除无用信息 去除MiGameCenterSDKService 补全汉化信息 修复部分闪退 优化算法，精简体积 zipalign对齐优化 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"破解","slug":"破解","permalink":"http://vioren.space/tags/破解/"}]},{"title":"3D桌球Pool Break Pro v2.6.5汉化特别版","date":"2016-12-05T09:29:20.000Z","path":"archives/poolbreak/","text":"Pool Break是一套具有多种台球玩法，包括八球，九球，斯诺克，克朗棋和加拿大棋等十余种台球的一套游戏，其逼真的物理逻辑系数和图形渲染效果以及方便快捷的操作方式均有可圈可点之处。更值得一提的是, 其不仅可以人机对战, 且支持联网对战。 功能特点： 十余种桌球游戏合一 支持多国语言 在线跨平台多人游戏 在线聊天 有四个难度级别的电脑对手 单机多人轮流模式 逼真的桌球物理效果 多种形状球台 扎杆和偏杆 可视化的用户界面 竖屏和横屏双模式 内置帮助手册 123456789更新日志：Version 2.6.5:★ Allows replay of winning shot after game over★ Stability improvements and bug fixesVersion 2.6.4:★ Added Leaderboards and Achievements★ Fixed Spanish translation issues★ Minor bug fixes 来源：http://www.kineticbytes.comGoogle Play：https://play.google.com/store/apps/details?id=com.kb.Carrom3DFull 修改说明： 破解签名验证，修复闪退 修正并补全简体中文汉化 增加了相关帮助信息和文档的汉化 精简语言并剔除相关选项 zipalign对齐优化 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"汉化","slug":"汉化","permalink":"http://vioren.space/tags/汉化/"},{"name":"破解","slug":"破解","permalink":"http://vioren.space/tags/破解/"}]},{"title":"使用渐进式 JPEG 来提升用户体验","date":"2016-11-30T17:56:40.000Z","path":"archives/optimizejpeg/","text":"网络上那些色色的照片都是.jpg格式的（“色色”指的是色彩斑斓的意思 /手动抠鼻/）。不知诸位有没有注意到，这些.jpg格式的图片在呈现的时候，有两种方式，一种是自上而下扫描式的，还有一种就是先是全部的模糊图片，然后逐渐清晰(就像GIF格式的交错显示)。 JPEG文件有两种保存方式，分别是Baseline JPEG（基准式）和Progressive JPEG（渐进式）。两种格式有相同尺寸以及图像数据，它们的扩展名也是相同的，唯一的区别是二者显示的方式不同。Baseline JPEG 这种类型的JPEG文件存储方式是按从上到下的扫描方式，把每一行顺序的保存在JPEG文件中。打开这个文件显示它的内容时，数据将按照存储时的顺序从上到下一行一行的被显示出来，直到所有的数据都被读完，就完成了整张图片的显示。如果文件较大或者网络下载速度较慢，那么就会看到图片被一行行加载的效果，这种格式的JPEG没有什么优点，因此，一般都推荐使用Progressive JPEG。 Progressive JPEG 和Baseline JPEG一遍扫描不同，Progressive JPEG文件包含多次扫描，这些扫描顺寻的存储在JPEG文件中。打开文件过程中，会先显示整个图片的模糊轮廓，随着扫描次数的增加，图片变得越来越清晰。这种格式的主要优点是在网络较慢的情况下，可以看到图片的轮廓知道正在加载的图片大概是什么。在一些网站打开较大图片时，你就会注意到这种技术。 #####让我们来对比一下： 渐进式图片带来的好处是可以让用户在没有下载完图片就可以看到最终图像的大致轮廓，一定程度上可以提升用户体验。（瀑布留的网站建议还是使用基准式的） 另外渐进式的图片的大小并不会和基本的图片大小相差很多，有时候可能会比基本图片更小。渐进式的图片的缺点就是吃用户的CPU和内存，不过对于现在的电脑来说这点图片的计算并不算什么。 下载呈现速度 一个名叫Ann Robson的人，最近对各个浏览器下渐进式图片呈现做了测试。下图为FireFox浏览器下呈现速度的对比图： 当大图轮廓加载OK的时候，小图最后一个乳猪还没有出世面；而基准式乳猪图还没有开始加载！显然，罗伯森是想告诉我们，渐进式JPEG下载更快。 下表为其在各个浏览器下测试的结果： 结论很简单，Chrome + Firefox + IE9浏览器下，渐进式图片加载更快，而且是快很多，至于其他浏览器，与基准式图片的加载一致，至少不会拖后腿。 Scott Gilbertson对渐进式图片有其他的补充：1.你永不知道基准式图片内容，除非他完全加载出来。2.渐进式图片一开始大小框架就定好，不会像基准式图片一样，由于尺寸未设定而造成回流——提高的渲染性能。3.渐进式图片也有不足，就是吃CPU吃内存。//ps: png图片也是可以渐进式呈现的 内容就是这些，权衡使用在你手。一般而言，大尺寸图片建议使用渐进式JPEG。 #####那么怎么将图片保存为或者转化为Progressive JPEG呢？方法如下： 1、PhotoShop在photoshop中有“存储为web所用格式”，打开后选择“连续”就是渐进式JPEG。 2、Linux检测是否为progressive jpeg： identify -verbose filename.jpg | grep Interlace（如果输出 None 说明不是progressive jpeg；如果输出 Plane 说明是 progressive jpeg。）将basic jpeg转换成progressive jpeg：&gt; convert infile.jpg -interlace Plane outfile.jpg 3、PHP使用imageinterlace和imagejpeg函数我们可以轻松解决转换问题。123456&lt;?php $im = imagecreatefromjpeg('pic.jpg'); imageinterlace($im, 1); imagejpeg($im, './php_interlaced.jpg', 100); imagedestroy($im);?&gt; 4、Python12345678910import PILfrom exceptions import IOErrorimg = PIL.Image.open(\"c:\\\\users\\\\biaodianfu\\\\pictures\\\\in.jpg\")destination = \"c:\\\\users\\\\biaodianfu\\\\pictures\\\\test.jpeg\"try: img.save(destination, \"JPEG\", quality=80, optimize=True, progressive=True)except IOError: PIL.ImageFile.MAXBLOCK = img.size[0] * img.size[1] img.save(destination, \"JPEG\", quality=80, optimize=True, progressive=True) 5、jpegtranjpegtran -copy none -progressive &lt;inputfile&gt; &lt;outputfile&gt; 6、C#12345678using (Image source = Image.FromFile(@&quot;D:\\temp\\test2.jpg&quot;)) &#123; ImageCodecInfo codec = ImageCodecInfo.GetImageEncoders().First(c =&gt; c.MimeType == &quot;image/jpeg&quot;); EncoderParameters parameters = new EncoderParameters(3); parameters.Param[0] = new EncoderParameter(System.Drawing.Imaging.Encoder.Quality, 100L); parameters.Param[1] = new EncoderParameter(System.Drawing.Imaging.Encoder.ScanMethod, (int)EncoderValue.ScanMethodInterlaced); parameters.Param[2] = new EncoderParameter(System.Drawing.Imaging.Encoder.RenderMethod, (int)EncoderValue.RenderProgressive); source.Save(@&quot;D:\\temp\\saved.jpg&quot;, codec, parameters);&#125; 特别感谢@标点符 @张鑫旭","tags":[{"name":"软件开发","slug":"软件开发","permalink":"http://vioren.space/tags/软件开发/"}]},{"title":"后期对焦AfterFocus Pro v2.1.0独家汉化破解版","date":"2016-11-14T17:29:20.000Z","path":"archives/afterfocus/","text":"AfterFocus Pro – 一款可将照片后期调教出背景虚化、焦点景物突出的单反效果，还可进行光圈控制、使用滤镜等一系列操作的Android应用。 通过AfterFocus Pro，你可以通过简单地选择对焦区域创建DSLR风格的背景虚化的照片。此外，多种滤镜效果为您创造最自然，逼真的照片。更精确地选择一个对焦领域，可以实现更加自然和专业的照片。只需标记你想要对焦的地方，AfterFocus Pro将自动精确识别对焦区域中复杂形状的物体。这种自动功能可以让你在智能手机的小屏幕上更快捷方便的修片。另外，AfterFocus Pro的背景虚化效果使相片背景的边缘和焦点区域之间呈现更逼真的外观。 通过滤镜效果，您将享受拍摄和照片编辑，并在社交平台轻松分享。功能特点： 智能选择对焦区域在对焦区域和背景区域内简单地画一些线条，然后AfterFocus Pro会自动识别对焦区域。也可以手动涂抹选择对焦区域。 背景虚化效果你可以创建各种风格的光圈，就像数码单反相机最现实的虚化效果。需要注意的是，对于某些运动的物体，也可使用运动模糊和放大的虚化效果。 滤镜效果AfterFocus Pro提供从基本效果到像专业的大师拍摄的效果。此外，您还可以突出使用背景虚化效果的背景聚光灯。 易于分享您可以通过电子邮件和社交平台方便快捷分享。 1234567891011121314更新日志：Version 2.1.0*1. Crash fix*2. Adds brush-size tool in manual focusingVersion 2.0.3*1. Can save image in original size*2. Adds Zoom blur*3. Keeps image quality after saving for the large image*4. Focus selection tool Improvements*5. Overall UI improvementsVersion 1.7.2*1. Fix slow responsiveness for small screen device*2. Fix crash when app brings to foreground from background 来源：http://appm1.com/afterfocusGoogle Play：https://play.google.com/store/apps/details?id=com.motionone.afterfocus_pro 修改说明： 破解Google授权验证、NDK签名逻辑验证 精简语言 汉化为简体中文 arm架构精简 Zipalign对齐优化 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 破解版仅供学习研究使用，严禁用于商业用途，请在下载后24小时内删除。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"汉化","slug":"汉化","permalink":"http://vioren.space/tags/汉化/"},{"name":"破解","slug":"破解","permalink":"http://vioren.space/tags/破解/"}]},{"title":"Mifare Classic Tool(MCT)2.1.0汉化特别版","date":"2016-10-19T09:29:20.000Z","path":"archives/mifareclassictool/","text":"Mifare Classic Tool (MCT) – 一款用来读取、写入、分析Mifare Classic RFID卡片的Android NFC应用。 功能特点： 读取Mifare Classic卡片 编辑并保存卡片的数据 写入Mifare Classic卡片 复制Mifare Classic卡片(从一张卡片写入数据文件到一张新卡；不包括第一区块) 字典暴力破解 格式化标签至出厂状态 写特殊的Mifare Classic卡片制造商块 创建、编辑、保存和共享密钥文件(字典) 编码解码Mifare Classic价值块 编码解码Mifare Classic的访问条件 比较转储(比对工具) 显示卡片属性信息 高亮显示卡片十六进制数据 显示卡片数据为7-Bit US-ASCII码 以表来显示Mifare Classic访问条件 显示Mifare Classic值块为整数 应用内（离线）帮助和其它信息 它是个开源项目(GPLv3) 12345678910111213141516更新日志：Version 2.1.0: * Set custom sector count (read/write MIFARE Classic 2k). * Check BCC before writing. * Added BCC calculator tool. * Added more well known keys to the extended key file. (Remove the old and restart MCT to get the new key file.) * Added Chinese translation. * Changed \"Mifare\" to \"MIFARE\" to comply with NXP's registered trademark. * Added multiple devices to the list of incompatible devices. * Some minor bug fixes.Version 2.0.7: * Bugfix: Request permissions on Android 6.x devices to read/write the external storage. Thanks to Mislav Jurinić. 源码：https://github.com/ikarus23/MifareClassicTool来源：http://www.proxmark.org/forum/viewtopic.php?id=1535Google Play：https://play.google.com/store/apps/details?id=de.syss.MifareClassicTool 修改说明： 修正官方汉化 精简语言 独家汉化帮助文档 zipalign对齐优化 修改人员：风澈vio（转载必须注明出处） 下载地址：百度网盘 密码：1024 注意： 使用者由此程序所造成的损失修改者不承担任何责任。 最终版权归原作者所有。 请在法律允许的范围内合理使用本程序。","tags":[{"name":"App","slug":"App","permalink":"http://vioren.space/tags/App/"},{"name":"汉化","slug":"汉化","permalink":"http://vioren.space/tags/汉化/"}]},{"title":"Markdown语法综述","date":"2016-10-10T07:27:17.000Z","path":"archives/markdown/","text":"Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，其流行程度已经得到了GitHub和Stack Overflow的广泛支持，学习成本也不需要太多，作为普通人我们也可以轻松上手，结合Hexo我们可以十分优(zhuang)雅(bi)的分享知识，传递快乐。 认识Markdown 在此之前，需要了解的是。Markdown不支持任何格式，所谓的加粗和斜体，只是两种强调语法，最终是显示为何种格式都是合理的。所以，尽管Markdown的语法非常简单，但是Markdown的目的并不是要取代 HTML，甚至也没有要和它相近，Markdown的语法种类很少，只对应 HTML标记的一小部分。Markdown的构想并不是要使得 HTML 文档更容易书写。在我看来，HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。样式和结构分离，算是Markdown的设计思想之一，而这也是现在 HTML 的发展方向，况且结构布局本来就是CSS控制的。 在刚才的导语里提到，Markdown是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的文字处理软件Word或Pages有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用CloudApp这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用Mou这类Markdown工具进行编辑并直接上传。 Markdown 官方文档 创始人 John Gruber 的 Markdown 语法说明 Markdown语法说明中文完整版 Markdown语法说明中文简要版 使用 Markdown 的优点 专注你的文字内容而不是排版样式。轻松的导出 HTML、PDF 和本身的 .md 文件。纯文本内容，兼容所有的文本编辑器与字处理软件。可读，直观。适合所有人的写作语言。 Markdown 语法的简要规则 1、标题标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加1-6个#号即可。同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加#即可，标题字号相应降低。例如：123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 注意：建议在#和标题之间保留一个字符的空格，这是最标准的Markdown 语法。 2、列表列表分为无序列表和有序列表，在 Markdown中，列表的显示只需要在文字前加上星号*、减号-或是加号+即可变为无序列表，有序列表则直接在文字前加1. 2. 3.等即可。例如：1234567891011* 文本A* 文本B* 文本C或- 文本A- 文本B- 文本C或+ 文本A+ 文本B+ 文本C 1231. 文本12. 文本23. 文本3 注意：符号和文字之间要加上一个字符的空格。 3、引用在我们写作的时候经常需要引用他人的文字，这个时候引用这个格式就很有必要了。在 Markdown 中，你只需要在你希望引用的文字前面加上右角括号&gt;就好了。例如：123&gt; 幸得识卿桃花面，从此阡陌多暖春。下文 注意：&gt;和引用文本之间要保留一个字符的空格，引用与下文之间保留一行空行。 4、链接与图片链接和图片也是丰富文章必不可少的因素。使用[显示文本](链接地址)这样的语法即可插入链接，使用![](图片链接地址)这样的语法即可插入图片。例如：1[寻沫小栈](http://vioren.github.io) 1![我的头像](http://vioren.github.io/assets/img/head.jpg) 注意：插入图片的语法和链接的语法很像，只是前面多了一个!。 另：Markdown支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号&lt;和&gt;包起来，Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样。例如：1&lt;http://example.com/&gt; 5、粗体与斜体Markdown的粗体和斜体也非常简单，用两个星号**或两个下划线__包裹一段文本就是粗体的语法，用一个星号*或一个下划线_包裹一段文本就是斜体的语法。例如：1**这里是粗体** 1*这里是斜体* 6、分割线与删除线分割线的语法只需要另起一行，连续输入三个减号---、下划线___、星号***即可。删除线的语法只需用两个波浪号~~包裹一段文本即可。例如：12345---或___或*** 1~~本段文字被删除线拦截~~ 注意：对于分割线，行内不得有任何其他字符。 7、代码句和代码块如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown 下实现也非常简单。需要引用代码时，如果引用的代码语句只有一段，不分行，可以用一个重音符`将代码语句包裹起来。如果引用的语句为多行的代码块，可以将三个重音符```置于这段代码的首行和末行来包裹代码块。例如：1`hello word代码句` 注意：在代码块中使用tab键即可进行缩进。 8、表格相对于那些简单的语法，Markdown表格则较为繁琐和累人。例如：12345| Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 | Markdown 免费编辑器在线编辑器：Cmd Markdown 编辑阅读器 https://www.zybuluo.com简书 http://www.jianshu.com/writerWindows 平台：MarkdownPad http://markdownpad.comMarkPad http://code52.org/DownmarkerWPFLinux 平台：ReText http://sourceforge.net/p/retext/home/ReTextMac 平台：Mou http://mouapp.com浏览器插件：MaDe(Chrome)https://chrome.google.com/webstore/detail/oknndfeeopgpibecfjljjfanledpbkog)高级应用：Sublime Text 2 + MarkdownEditing / 教程","tags":[{"name":"软件开发","slug":"软件开发","permalink":"http://vioren.space/tags/软件开发/"},{"name":"Hexo","slug":"Hexo","permalink":"http://vioren.space/tags/Hexo/"}]},{"title":"多说评论下篇之个性化评论框","date":"2016-10-03T07:27:17.000Z","path":"archives/duoshuothree/","text":"前言 上面两篇我们详细介绍了多说评论自定义CSS头像和显示UA信息和博主。但是仍然感觉评论框十分不协调，并且有些杂乱，接下来我们就要谈论我们的多说评论框下篇之个性化评论框，话不多说，切入正题~ 多说自定义CSS 扩展阅读多说docs：http://dev.duoshuo.com/docs/4ff1cfd0397309552c000017 1、 评论框左右边距如果你的评论框左右边距过小（评论框太宽），输入下列代码调整宽度，直到页面上评论框宽度显示合适：方式一：1#ds-thread &#123;padding:24px;&#125; 方式二：1#ds-thread &#123;margin:24px;&#125; 如果你的评论框太窄，可能是宽度被设定了不合适的值，输入下列代码让宽度自动拉伸：1#ds-thread &#123;width:auto;&#125; 2、评论框背景色多说评论会采用主题的背景色作为整体评论框的背景，这样可能导致评论本身不是很显眼。你可以输入下列代码来更改整体评论框的背景颜色：方式一：1#ds-thread &#123;background: #ffffff;&#125; 方式二：1#ds-thread #ds-reset .ds-textarea-wrapper &#123; background: rgba(255, 255, 255, .5);&#125; 这个评论背景的边角默认是直角，如果想改成圆角，请输入下列代码（仅在firefox，chrome及高版本ie浏览器下有效，ie6,7,8将仍然为直角显示）：1#ds-thread&#123; border-radius: 5px;&#125; 注意：其中的#ffffff可以被替换为你希望的颜色，以便于评论文字相适应。 3、高亮字体的颜色高亮字体包括“n条评论”，“n条微博”，评论者名字的颜色，想修改它的显示颜色（在大多数情况下默认是红色），输入下列代码：1#ds-thread #ds-reset .ds-highlight&#123;color: #ffffff !important;&#125; 4、定义评论框内字体和颜色1#ds-thread #ds-reset .ds-textarea-wrapper textarea, #ds-thread #ds-reset .ds-textarea-wrapper .ds-hidden-text &#123;font-family: ‘微软雅黑’ ‘Microsoft Yahei’!important;font-size:12px;letter-spacing:1px;&#125; 这个好像是定义评论框内输入的文字字体的，嗯，好像是。 想修改评论正文的字体颜色，请输入下列代码：1#ds-thread #ds-reset .ds-comment-body p &#123;color: #ffffff;&#125; 当您在修改一部分上面未示例的标签样式时，遇到无效的情况，请尝试增加：!important 5、评论框背景图片url换成你自己想要的图片地址就行了，最好使用绝对路径。方式一：123.ds-textarea-wrapper.ds-rounded-top&#123;background: #ffffff url(你想设置的图片地址) no-repeat right bottom !important;&#125; 方式二：123#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;background:url(你的图片地址) center no-repeat;&#125; 方式三：123#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;background: url(\"你的图片地址\") bottom right no-repeat;&#125; 6、将评论框底部的分享到微博QQ空间什么的隐藏起来1.ds-sync&#123;display:none !important;&#125; 7、隐藏评论框底部渐变背景1#ds-reset .ds-gradient-bg&#123;background:none !important;&#125; 话说渐变色什么的虽然立体感较强但是和主题整体风格不融洽，隐藏之，这样底部就是透明的了。 8、定义发布按钮字体，以及渐变色背景1#ds-thread #ds-reset .ds-post-button&#123;font-family: ‘微软雅黑’‘Microsoft Yahei’!important;font-weight: bold;font-size:12px;background:none !important;color:#49976b !important;&#125; 9、隐藏评论右上方 最热 最新排序按钮1#ds-thread #ds-reset .ds-sort &#123;display:none;&#125; 10、隐藏评论左上方 评论总数背景色及边框1#ds-thread #ds-reset li.ds-tab a.ds-current&#123;background:none;border:none;&#125; 11、隐藏底部多说版权很多朋友在找这个代码。不过不建议用。毕竟显示版权信息还是比较好。方式一：1#ds-thread #ds-reset .ds-powered-by&#123;display:none;&#125; 方式二：1#ds-thread .ds-powered-by &#123;display: none;&#125; 12、定义各种文字高亮颜色，以及浮动窗口的高亮颜色，配合模板颜色把以下色值统一设置即可。123456789101112/*定义高亮字体颜色*/#ds-reset .ds-highlight&#123;color:#49976b !important;&#125;/*定义评论框内其他高亮颜色*/#ds-thread #ds-reset #ds-bubble a&#123;color: #49976b !important;&#125;/*定义评论框内其他高亮颜色*/#ds-thread #ds-reset #ds-bubble &#123;color: #49976b !important;&#125;/*定义评论框内其他高亮颜色*/#ds-reset #ds-ctx .ds-ctx-entry .ds-ctx-head a&#123;color: #49976b !important;&#125;/*定义评论框内其他高亮颜色*/#ds-thread #ds-reset a.ds-comment-context:hover&#123;color: #49976b !important;&#125;/*定义评论框内其他高亮颜色*/#ds-thread #ds-reset a.ds-comment-context&#123;color: #49976b !important;&#125; 13、喜欢按钮样式：透明度，背景，边框等样式调整。12345678910111213.ds-meta &#123; opacity: .5; &#125;.ds-meta:hover &#123; opacity: 1; &#125;#ds-thread #ds-reset a.ds-like-thread-button &#123; background-image: none; background-color: #fee2d3; border: none; text-shadow: none; font-family: inherit; &#125; 14、社交账号登陆透明度123456#ds-thread #ds-reset .ds-login-buttons &#123; opacity: .5;&#125;#ds-thread #ds-reset .ds-login-buttons:hover &#123; opacity: 1; &#125; 15、评论、文本框字体：默认字体偏小，稍作调整。12345#ds-thread #ds-reset .ds-comment-body p, #ds-thread #ds-reset .ds-textarea-wrapper textarea &#123; font-size: 1.15em; color: #717171; font-family: inherit; &#125; 16、用户名等超链接颜色123#ds-thread #ds-reset .ds-highlight &#123; color: #ef7c6c !important;&#125; 17、未登录用户名字颜色：颜色与其他登陆用户保持一致123#ds-thread #ds-reset .ds-user-name &#123; color: #ef7c6c !important;&#125; 18、工具栏背景123#ds-reset .ds-gradient-bg &#123; background: rgba(255, 255, 255, .5);&#125; 19、“发布”按钮背景：去掉背景图，修改底色，去掉文字阴影。12345#ds-thread #ds-reset .ds-post-button &#123; background-image: none; background: rgba(136, 172, 219, .2); text-shadow: none;&#125; 20、评论列表背景123456#ds-thread #ds-reset li.ds-post &#123; background: rgba(255, 255, 255, .2);&#125;#ds-thread #ds-reset li.ds-post:hover &#123; background-color: rgba(255, 255, 255, .6) !important;&#125; 21、评论数标签123#ds-thread #ds-reset li.ds-tab a.ds-current &#123; background: rgba(255, 255, 255, .2);&#125; 都是一些现成的CSS代码，直接复制就可以用了。当然里面的颜色或者是其他属性什么的你们自己修改就可以了。照样可以实现你想要的效果。 手动获取css标签信息当然，这些个性化信息并不能全覆盖我们自己想要达到的效果，那么在具体使用中，我们怎样知道多说的某一个按钮，某一条线，使用的是哪一个css标签呢？(像#ds-thread #ds-reset .ds-highlight)，下面提供一个在google chrome下查看的简单办法： 在页面元素上方点击【鼠标右键】，选择【审查元素】 将鼠标悬浮在相应元素的代码上方，页面中也会显示出选中效果。点击代码之后，右侧子窗口会显示相应标签。 没错，如果你想要控制喜欢按钮的颜色，只需在多说的自定义css里，添加并调整color的颜色值即可 123#ds-thread #ds-reset a.ds-like-thread-button span &#123; color: #F00;&#125; 特别感谢：@沈超飞 @MOxFIVE","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://vioren.space/tags/Hexo/"},{"name":"多说评论","slug":"多说评论","permalink":"http://vioren.space/tags/多说评论/"},{"name":"前端开发","slug":"前端开发","permalink":"http://vioren.space/tags/前端开发/"}]},{"title":"多说评论中篇之显示UA信息和博主","date":"2016-10-02T07:27:17.000Z","path":"archives/duoshuotwo/","text":"前言 上篇我们详细介绍了多说评论自定义CSS头像。为了彰显极(zhuang)客(bi)范儿，单单炫酷的头像动画可是不够的。接下来我们就要谈论我们的多说评论框中篇之显示UA(User Agent)信息和博主，话不多说，切入正题~ 多说添加UA(User Agent)等个性化信息 本地化embed.js1、下载embed.js多说官方 - http://static.duoshuo.com/embed.js 2、上传embed.js我的做法上传到GitHub，其它类似七牛或者云主机的方法都可以http://vioren.github.io/assets/js/embed.js 3、修改多说调用地址在Hexo的主题中的duoshuo.ejs文件中修改调用地址，其它平台以此类推，我自己的做法1ds.src = '/assets/js/embed.js'; 修改embed.js1、获取多说ID方法一：在文章下方登录后评论点击头像可获取多说ID方法二：访问多说后台，http://duoshuo.com/settings/ ，点击你的用户名，地址栏中会出现如如下的ID地址http://duoshuo.com/profile/6223597840313090818/ 2、添加个性化信息到embed.js文件在embed.js的最上面添加以下代码：(注意修改e.user_id多说ID，可以自定义ssk前端显示昵称) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136//移动客户端判断开始function checkMobile() &#123; var isiPad = navigator.userAgent.match(/iPad/i) != null; if (isiPad) &#123; return false; &#125; var isMobile = navigator.userAgent.match(/iphone|android|phone|mobile|wap|netfront|x11|java|opera mobi|opera mini|ucweb|windows ce|symbian|symbianos|series|webos|sony|blackberry|dopod|nokia|samsung|palmsource|xda|pieplus|meizu|midp|cldc|motorola|foma|docomo|up.browser|up.link|blazer|helio|hosin|huawei|novarra|coolpad|webos|techfaith|palmsource|alcatel|amoi|ktouch|nexian|ericsson|philips|sagem|wellcom|bunjalloo|maui|smartphone|iemobile|spice|bird|zte-|longcos|pantech|gionee|portalmmm|jig browser|hiptop|benq|haier|^lct|320x320|240x320|176x220/i) != null; if (isMobile) &#123; return true; &#125; return false;&#125;//移动客户端判断结束//管理员判断开始function sskadmin(e) &#123; var ssk = ''; if (e.user_id == 6223597840313090818) &#123; if (checkMobile()) &#123; ssk = '&lt;span class=\"ua\"&gt;&lt;span class=\"sskadmin\"&gt;☆博主☆&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;'; &#125; else &#123; ssk = '&lt;span class=\"ua\"&gt;&lt;span class=\"sskadmin\"&gt;☆博主☆&lt;/span&gt;&lt;/span&gt;'; &#125; &#125; else &#123; if (checkMobile()) &#123; ssk = '&lt;br&gt;&lt;br&gt;'; &#125; &#125; return ssk;&#125;//管理员判断结束//显UA开始function ua(e) &#123; var r = new Array; var outputer = ''; if (r = e.match(/FireFox\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_firefox\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Mozilla FireFox' + ' ' + r1[1] &#125; else if (r = e.match(/Maxthon([\\d]*)\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_maxthon\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Maxthon' + ' ' + r1[1] &#125; else if (r = e.match(/BIDUBrowser([\\d]*)\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_ucweb\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; 百度浏览器' + ' ' + r1[1] &#125; else if (r = e.match(/UBrowser([\\d]*)\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_ucweb\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; UCBrowser' + ' ' + r1[1] &#125; else if (r = e.match(/UCBrowser([\\d]*)\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_ucweb\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; UCBrowser' + ' ' + r1[1] &#125; else if (r = e.match(/MetaSr/ig)) &#123; outputer = '&lt;span class=\"ua_sogou\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; 搜狗浏览器' &#125; else if (r = e.match(/2345Explorer/ig)) &#123; outputer = '&lt;span class=\"ua_2345explorer\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; 2345王牌浏览器' &#125; else if (r = e.match(/2345chrome/ig)) &#123; outputer = '&lt;span class=\"ua_2345chrome\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; 2345加速浏览器' &#125; else if (r = e.match(/LBBROWSER/ig)) &#123; outputer = '&lt;span class=\"ua_lbbrowser\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; 猎豹安全浏览器' &#125; else if (r = e.match(/MicroMessenger\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_qq\"&gt;&lt;i class=\"fa fa-weixin\"&gt;&lt;/i&gt; 微信' + ' ' + r1[1] /*.split('/')[0]*/ &#125; else if (r = e.match(/QQBrowser\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_qq\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; QQ浏览器' + ' ' + r1[1] /*.split('/')[0]*/ &#125; else if (r = e.match(/QQ\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_qq\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; QQ浏览器' + ' ' + r1[1] /*.split('/')[0]*/ &#125; else if (r = e.match(/MiuiBrowser\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_mi\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Miui浏览器' + ' ' + r1[1] /*.split('/')[0]*/ &#125; else if (r = e.match(/Chrome([\\d]*)\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_chrome\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Chrome' + ' ' + r1[1] /*.split('.')[0]*/ &#125; else if (r = e.match(/safari\\/([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_apple\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Apple Safari' + ' ' + r1[1] &#125; else if (r = e.match(/Opera[\\s|\\/]([^\\s]+)/ig)) &#123; var r1 = r[0].split(\"/\"); outputer = '&lt;span class=\"ua_opera\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Opera' + ' ' + r1[1] &#125; else if (r = e.match(/Trident\\/7.0/gi)) &#123; outputer = '&lt;span class=\"ua_ie\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Internet Explorer 11' &#125; else if (r = e.match(/MSIE\\s([^\\s|;]+)/gi)) &#123; outputer = '&lt;span class=\"ua_ie\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; Internet Explorer' + ' ' + r[0] /*.replace('MSIE', '').split('.')[0]*/ &#125; else &#123; outputer = '&lt;span class=\"ua_other\"&gt;&lt;i class=\"fa fa-globe\"&gt;&lt;/i&gt; 其它浏览器' &#125; if (checkMobile()) &#123; Mobile = '&lt;br&gt;&lt;br&gt;'; &#125; else &#123; Mobile = ''; &#125; return outputer + \"&lt;/span&gt;\" + Mobile;&#125;function os(e) &#123; var os = ''; if (e.match(/win/ig)) &#123; if (e.match(/nt 5.1/ig)) &#123; os = '&lt;span class=\"os_xp\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows XP' &#125; else if (e.match(/nt 6.1/ig)) &#123; os = '&lt;span class=\"os_7\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows 7' &#125; else if (e.match(/nt 6.2/ig)) &#123; os = '&lt;span class=\"os_8\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows 8' &#125; else if (e.match(/nt 6.3/ig)) &#123; os = '&lt;span class=\"os_8_1\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows 8.1' &#125; else if (e.match(/nt 10.0/ig)) &#123; os = '&lt;span class=\"os_8_1\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows 10' &#125; else if (e.match(/nt 6.0/ig)) &#123; os = '&lt;span class=\"os_vista\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows Vista' &#125; else if (e.match(/nt 5/ig)) &#123; os = '&lt;span class=\"os_2000\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows 2000' &#125; else &#123; os = '&lt;span class=\"os_windows\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Windows' &#125; &#125; else if (e.match(/android/ig)) &#123; os = '&lt;span class=\"os_android\"&gt;&lt;i class=\"fa fa-android\"&gt;&lt;/i&gt; Android' &#125; else if (e.match(/ubuntu/ig)) &#123; os = '&lt;span class=\"os_ubuntu\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Ubuntu' &#125; else if (e.match(/linux/ig)) &#123; os = '&lt;span class=\"os_linux\"&gt;&lt;i class=\"fa fa-linux\"&gt;&lt;/i&gt; Linux' &#125; else if (e.match(/mac/ig)) &#123; os = '&lt;span class=\"os_mac\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Mac OS X' &#125; else if (e.match(/unix/ig)) &#123; os = '&lt;span class=\"os_unix\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; Unix' &#125; else if (e.match(/symbian/ig)) &#123; os = '&lt;span class=\"os_nokia\"&gt;&lt;i class=\"fa fa-mobile\"&gt;&lt;/i&gt; Nokia SymbianOS' &#125; else &#123; os = '&lt;span class=\"os_other\"&gt;&lt;i class=\"fa fa-desktop\"&gt;&lt;/i&gt; 其它操作系统' &#125; return os + \"&lt;/span&gt;\";&#125;//显UA结束 3、增加调用添加完以上代码后，在编辑器中搜索：1data-qqt-account=\"'+(r.qqt_account||\"\")+'\"&gt;'+u(r.name)+\"&lt;/span&gt;\"), 在后面添加：1t+=\"&lt;span class=\\\"ua\\\"&gt;\" + sskadmin(s.author) + \"&lt;/span&gt;&lt;span class=\\\"ua\\\"&gt;\" + ua(s.agent) +\"&lt;/span&gt;&lt;span class=\\\"ua\\\"&gt;\"+ os(s.agent) + \"&lt;/span&gt;\", （如果搜索不到的话就减小点搜索范围，如:data-qqt-account=&quot;&#39;+） 多说后台自定义CSS请参考上篇方法加入多说自定义CSS123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220/*多说UA开始*/ span.this_ua &#123; background-color: #ccc!important; border-radius: 4px; padding: 0 5px!important; margin: 0 1px!important; border: 1px solid #BBB!important; color: #fff; /*text-transform: Capitalize!important; float: right!important; line-height: 18px!important;*/ &#125;.this_ua.platform.Windows &#123; background-color: #39b3d7!important; border-color: #46b8da!important;&#125;.this_ua.platform.Linux &#123; background-color: #3A3A3A!important; border-color: #1F1F1F!important;&#125;.this_ua.platform.Ubuntu &#123; background-color: #DD4814!important; border-color: #DD4814!important;&#125;.this_ua.platform.Mac &#123; background-color: #666666!important; border-color: #666666!important;&#125;.this_ua.platform.Android &#123; background-color: #98C13D!important; border-color: #98C13D!important;&#125;.this_ua.platform.iOS &#123; background-color: #666666!important; border-color: #666666!important;&#125;.this_ua.browser.Chrome &#123; background-color: #EE6252!important; border-color: #EE6252!important;&#125;.this_ua.browser.Chromium &#123; background-color: #EE6252!important; border-color: #EE6252!important;&#125;.this_ua.browser.Firefox &#123; background-color: #f0ad4e!important; border-color: #eea236!important;&#125;.this_ua.browser.IE &#123; background-color: #428bca!important; border-color: #357ebd!important;&#125;.this_ua.browser.Edge &#123; background-color: #428bca!important; border-color: #357ebd!important;&#125;.this_ua.browser.Opera &#123; background-color: #d9534f!important; border-color: #d43f3a!important;&#125;.this_ua.browser.Maxthon &#123; background-color: #7373B9!important; border-color: #7373B9!important;&#125;.this_ua.browser.Safari &#123; background-color: #666666!important; border-color: #666666!important;&#125;.this_ua.sskadmin &#123; background-color: #00a67c!important; border-color: #00a67c!important;&#125;/*UA End*/ /*Head Start*/ #ds-thread #ds-reset ul.ds-comments-tabs li.ds-tab a.ds-current &#123; border: 0px; color: #6D6D6B; text-shadow: none; background: #F3F3F3;&#125;#ds-thread #ds-reset .ds-highlight &#123; font-family: Microsoft YaHei, \"Helvetica Neue\", Helvetica, Arial, Sans-serif; ;font-size: 100%; color: #6D6D6B !important;&#125;#ds-thread #ds-reset ul.ds-comments-tabs li.ds-tab a.ds-current:hover &#123; color: #696a52; background: #F2F2F2;&#125;#ds-thread #ds-reset a.ds-highlight:hover &#123; color: #696a52 !important;&#125;#ds-thread &#123; padding-left: 15px;&#125;#ds-thread #ds-reset li.ds-post,#ds-thread #ds-reset #ds-hot-posts &#123; overflow: visible;&#125;#ds-thread #ds-reset .ds-post-self &#123; padding: 10px 0 10px 10px;&#125;#ds-thread #ds-reset li.ds-post,#ds-thread #ds-reset .ds-post-self &#123; border: 0 !important;&#125;#ds-reset .ds-avatar, #ds-thread #ds-reset ul.ds-children .ds-avatar &#123; top: 15px; left: -20px; padding: 5px; width: 36px; height: 36px; box-shadow: -1px 0 1px rgba(0,0,0,.15) inset; border-radius: 46px; background: #FAFAFA;&#125;#ds-thread .ds-avatar a &#123; display: inline-block; padding: 1px; width: 32px; height: 32px; border: 1px solid #b9baa6; border-radius: 50%; background-color: #fff !important;&#125;#ds-thread .ds-avatar a:hover &#123; &#125;#ds-thread .ds-avatar &gt; img &#123; margin: 2px 0 0 2px;&#125;#ds-thread #ds-reset .ds-replybox &#123; box-shadow: none;&#125;#ds-thread #ds-reset ul.ds-children .ds-replybox.ds-inline-replybox a.ds-avatar,#ds-reset .ds-replybox.ds-inline-replybox a.ds-avatar &#123; left: 0; top: 0; padding: 0; width: 32px !important; height: 32px !important; background: none; box-shadow: none;&#125;#ds-reset .ds-replybox.ds-inline-replybox a.ds-avatar img &#123; width: 32px !important; height: 32px !important; border-radius: 50%;&#125;#ds-reset .ds-replybox a.ds-avatar,#ds-reset .ds-replybox .ds-avatar img &#123; padding: 0; width: 32px !important; height: 32px !important; border-radius: 5px;&#125;#ds-reset .ds-avatar img &#123; width: 32px !important; height: 32px !important; border-radius: 32px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.22); -webkit-transition: .8s all ease-in-out; -moz-transition: .4s all ease-in-out; -o-transition: .4s all ease-in-out; -ms-transition: .4s all ease-in-out; transition: .4s all ease-in-out;&#125;.ds-post-self:hover .ds-avatar img &#123; -webkit-transform: rotateX(360deg); -moz-transform: rotate(360deg); -o-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg);&#125;#ds-thread #ds-reset .ds-comment-body &#123; -webkit-transition-delay: initial; -webkit-transition-duration: 0.4s; -webkit-transition-property: all; -webkit-transition-timing-function: initial; background: #F7F7F7; padding: 15px 15px 15px 47px; border-radius: 5px; box-shadow: #B8B9B9 0 1px 3px; border: white 1px solid;&#125;#ds-thread #ds-reset ul.ds-children .ds-comment-body &#123; padding-left: 15px;&#125;#ds-thread #ds-reset .ds-comment-body p &#123; color: #787968;&#125;#ds-thread #ds-reset .ds-comments &#123; border-bottom: 0px;&#125;#ds-thread #ds-reset .ds-powered-by &#123; display: none;&#125;#ds-thread #ds-reset .ds-comments a.ds-user-name &#123; font-weight: normal; color: #3D3D3D !important;&#125;#ds-thread #ds-reset .ds-comments a.ds-user-name:hover &#123; color: #D32 !important;&#125;#ds-thread #ds-reset #ds-bubble &#123; display: none !important;&#125;#ds-thread #ds-reset #ds-hot-posts &#123; border: 0;&#125;#ds-reset #ds-hot-posts .ds-gradient-bg &#123; background: none;&#125;#ds-thread #ds-reset .ds-comment-body:hover &#123; background-color: #F1F1F1; -webkit-transition-delay: initial; -webkit-transition-duration: 0.4s; -webkit-transition-property: all; -webkit-transition-timing-function: initial;&#125;/*多说UA结束*/ 至此，在多说评论框中添加ua显示与博主标示步骤就全部做完了 更多 评论框添加的UA前加上小图标http://ssk.91txh.com/209评论框添加 站长回复 标记http://ssk.91txh.com/207多说不本地化embed.js评论显示UAhttp://easun.org/blog/archives/make_duoshuo_show_ua.html多说UA插件http://gerald.top/code/duoshuo-uaua-parser-jshttps://github.com/faisalman/ua-parser-js 特别感谢：@wsgzao @萝莉社 @我的那些事-搜索客","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://vioren.space/tags/Hexo/"},{"name":"多说评论","slug":"多说评论","permalink":"http://vioren.space/tags/多说评论/"},{"name":"前端开发","slug":"前端开发","permalink":"http://vioren.space/tags/前端开发/"}]},{"title":"多说评论上篇之自定义CSS头像","date":"2016-10-01T07:27:17.000Z","path":"archives/duoshuoone/","text":"前言 多说是一款社会化评论系统，它改变了网站与用户之间，用户与用户之间的互动方式。当然Disqus在大家心目中可能更加具有影响力，而多说“接地气的本地化评论托管服务”则让人眼前一亮。 在WordPress和GitHub+Hexo搭建的静态Blog我们常常使用多说、畅言等评论系统，但是官方的配色和布局往往和我们的网站不太融合，所以我们要对其进行适当的美化。 接下来我们就要谈论我们的多说评论框上篇之自定义CSS头像，话不多说，切入正题~ 多说自定义CSS 以下是整理出来的十种头像特效，各种效果都以GIF动态图呈现，可以很直观的看到效果。毕竟是图片，实际效果当然会更好的多。代码在最下面 效果一 效果二 效果三 效果四 效果五 效果六 效果七 效果八 效果九 效果十 效果十一 附录：CSS代码 代码在下面(请用非IE浏览器看)，设置步骤超级简单，登录多说后台-&gt;设置-&gt;基本设置-&gt;自定义CSS，将代码粘贴自定义CSS 里，刷新即可看到效果。ps：代码都是共通的，不局限于多说，应用在别的效果上也是可以的。 头像效果一123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 1s; -moz-animation-duration: 1s; -ms-animation-duration: 1s; -o-animation-duration: 1s; animation-duration: 1s; &#125; @-webkit-keyframes rotateInDownLeft &#123; 0% &#123; -webkit-transform-origin: left bottom; -webkit-transform: rotate(-90deg); opacity: 0; &#125; 100% &#123; -webkit-transform-origin: left bottom; -webkit-transform: rotate(0); opacity: 1; &#125; &#125; @-moz-keyframes rotateInDownLeft &#123; 0% &#123; -moz-transform-origin: left bottom; -moz-transform: rotate(-90deg); opacity: 0; &#125; 100% &#123; -moz-transform-origin: left bottom; -moz-transform: rotate(0); opacity: 1; &#125; &#125; @-o-keyframes rotateInDownLeft &#123; 0% &#123; -o-transform-origin: left bottom; -o-transform: rotate(-90deg); opacity: 0; &#125; 100% &#123; -o-transform-origin: left bottom; -o-transform: rotate(0); opacity: 1; &#125; &#125; @keyframes rotateInDownLeft &#123; 0% &#123; transform-origin: left bottom; transform: rotate(-90deg); opacity: 0; &#125; 100% &#123; transform-origin: left bottom; transform: rotate(0); opacity: 1; &#125; &#125; #ds-reset .ds-avatar img&#123; -webkit-animation-name: rotateInDownLeft; -moz-animation-name: rotateInDownLeft; -o-animation-name: rotateInDownLeft; animation-name: rotateInDownLeft; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-animation-name: rotateOutDownLeft; -moz-animation-name: rotateOutDownLeft; -o-animation-name: rotateOutDownLeft; animation-name: rotateOutDownLeft; &#125; @-webkit-keyframes rotateOutDownLeft &#123; 0% &#123; -webkit-transform-origin: left bottom; -webkit-transform: rotate(0); opacity: 1; &#125; 100% &#123; -webkit-transform-origin: left bottom; -webkit-transform: rotate(90deg); opacity: 0; &#125; &#125; @-moz-keyframes rotateOutDownLeft &#123; 0% &#123; -moz-transform-origin: left bottom; -moz-transform: rotate(0); opacity: 1; &#125; 100% &#123; -moz-transform-origin: left bottom; -moz-transform: rotate(90deg); opacity: 0; &#125; &#125; @-o-keyframes rotateOutDownLeft &#123; 0% &#123; -o-transform-origin: left bottom; -o-transform: rotate(0); opacity: 1; &#125; 100% &#123; -o-transform-origin: left bottom; -o-transform: rotate(90deg); opacity: 0; &#125; &#125; @keyframes rotateOutDownLeft &#123; 0% &#123; transform-origin: left bottom; transform: rotate(0); opacity: 1; &#125; 100% &#123; transform-origin: left bottom; transform: rotate(90deg); opacity: 0; &#125; &#125; 头像效果二123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes bounceIn &#123; 0% &#123; opacity: 0; -webkit-transform: scale(.3); &#125; 50% &#123; opacity: 1; -webkit-transform: scale(1.05); &#125; 70% &#123; -webkit-transform: scale(.9); &#125; 100% &#123; -webkit-transform: scale(1); &#125; &#125; @-moz-keyframes bounceIn &#123; 0% &#123; opacity: 0; -moz-transform: scale(.3); &#125; 50% &#123; opacity: 1; -moz-transform: scale(1.05); &#125; 70% &#123; -moz-transform: scale(.9); &#125; 100% &#123; -moz-transform: scale(1); &#125; &#125; @-o-keyframes bounceIn &#123; 0% &#123; opacity: 0; -o-transform: scale(.3); &#125; 50% &#123; opacity: 1; -o-transform: scale(1.05); &#125; 70% &#123; -o-transform: scale(.9); &#125; 100% &#123; -o-transform: scale(1); &#125; &#125; @keyframes bounceIn &#123; 0% &#123; opacity: 0; transform: scale(.3); &#125; 50% &#123; opacity: 1; transform: scale(1.05); &#125; 70% &#123; transform: scale(.9); &#125; 100% &#123; transform: scale(1); &#125; &#125; #ds-reset .ds-avatar img &#123; -webkit-animation-name: bounceIn; -moz-animation-name: bounceIn; -o-animation-name: bounceIn; animation-name: bounceIn; &#125; @-webkit-keyframes bounceOut &#123; 0% &#123; -webkit-transform: scale(1); &#125; 25% &#123; -webkit-transform: scale(.95); &#125; 50% &#123; opacity: 1; -webkit-transform: scale(1.1); &#125; 100% &#123; opacity: 0; -webkit-transform: scale(.3); &#125; &#125; @-moz-keyframes bounceOut &#123; 0% &#123; -moz-transform: scale(1); &#125; 25% &#123; -moz-transform: scale(.95); &#125; 50% &#123; opacity: 1; -moz-transform: scale(1.1); &#125; 100% &#123; opacity: 0; -moz-transform: scale(.3); &#125; &#125; @-o-keyframes bounceOut &#123; 0% &#123; -o-transform: scale(1); &#125; 25% &#123; -o-transform: scale(.95); &#125; 50% &#123; opacity: 1; -o-transform: scale(1.1); &#125; 100% &#123; opacity: 0; -o-transform: scale(.3); &#125; &#125; @keyframes bounceOut &#123; 0% &#123; transform: scale(1); &#125; 25% &#123; transform: scale(.95); &#125; 50% &#123; opacity: 1; transform: scale(1.1); &#125; 100% &#123; opacity: 0; transform: scale(.3); &#125; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-animation-name: bounceOut; -moz-animation-name: bounceOut; -o-animation-name: bounceOut; animation-name: bounceOut; &#125; 头像效果三123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes rotateIn &#123; 0% &#123; -webkit-transform-origin: center center; -webkit-transform: rotate(-150deg); opacity: 0; &#125; 100% &#123; -webkit-transform-origin: center center; -webkit-transform: rotate(0); opacity: 1; &#125; &#125; @-moz-keyframes rotateIn &#123; 0% &#123; -moz-transform-origin: center center; -moz-transform: rotate(-150deg); opacity: 0; &#125; 100% &#123; -moz-transform-origin: center center; -moz-transform: rotate(0); opacity: 1; &#125; &#125; @-o-keyframes rotateIn &#123; 0% &#123; -o-transform-origin: center center; -o-transform: rotate(-150deg); opacity: 0; &#125; 100% &#123; -o-transform-origin: center center; -o-transform: rotate(0); opacity: 1; &#125; &#125; @keyframes rotateIn &#123; 0% &#123; transform-origin: center center; transform: rotate(-150deg); opacity: 0; &#125; 100% &#123; transform-origin: center center; transform: rotate(0); opacity: 1; &#125; &#125; #ds-reset .ds-avatar img&#123; -webkit-animation-name: rotateIn; -moz-animation-name: rotateIn; -o-animation-name: rotateIn; animation-name: rotateIn; &#125; @-webkit-keyframes rotateOut &#123; 0% &#123; -webkit-transform-origin: center center; -webkit-transform: rotate(0); opacity: 1; &#125; 100% &#123; -webkit-transform-origin: center center; -webkit-transform: rotate(150deg); opacity: 0; &#125; &#125; @-moz-keyframes rotateOut &#123; 0% &#123; -moz-transform-origin: center center; -moz-transform: rotate(0); opacity: 1; &#125; 100% &#123; -moz-transform-origin: center center; -moz-transform: rotate(150deg); opacity: 0; &#125; &#125; @-o-keyframes rotateOut &#123; 0% &#123; -o-transform-origin: center center; -o-transform: rotate(0); opacity: 1; &#125; 100% &#123; -o-transform-origin: center center; -o-transform: rotate(150deg); opacity: 0; &#125; &#125; @keyframes rotateOut &#123; 0% &#123; transform-origin: center center; transform: rotate(0); opacity: 1; &#125; 100% &#123; transform-origin: center center; transform: rotate(150deg); opacity: 0; &#125; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-animation-name: rotateOut; -moz-animation-name: rotateOut; -o-animation-name: rotateOut; animation-name: rotateOut; &#125; 头像效果四123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes rollIn &#123; 0% &#123; opacity: 0; -webkit-transform: translateX(-100%) rotate(-120deg); &#125; 100% &#123; opacity: 1; -webkit-transform: translateX(0px) rotate(0deg); &#125; &#125; @-moz-keyframes rollIn &#123; 0% &#123; opacity: 0; -moz-transform: translateX(-100%) rotate(-120deg); &#125; 100% &#123; opacity: 1; -moz-transform: translateX(0px) rotate(0deg); &#125; &#125; @-o-keyframes rollIn &#123; 0% &#123; opacity: 0; -o-transform: translateX(-100%) rotate(-120deg); &#125; 100% &#123; opacity: 1; -o-transform: translateX(0px) rotate(0deg); &#125; &#125; @keyframes rollIn &#123; 0% &#123; opacity: 0; transform: translateX(-100%) rotate(-120deg); &#125; 100% &#123; opacity: 1; transform: translateX(0px) rotate(0deg); &#125; &#125; #ds-reset .ds-avatar img&#123; -webkit-animation-name: rollIn; -moz-animation-name: rollIn; -o-animation-name: rollIn; animation-name: rollIn; &#125; @-webkit-keyframes rollOut &#123; 0% &#123; opacity: 1; -webkit-transform: translateX(0px) rotate(0deg); &#125; 100% &#123; opacity: 0; -webkit-transform: translateX(100%) rotate(120deg); &#125; &#125; @-moz-keyframes rollOut &#123; 0% &#123; opacity: 1; -moz-transform: translateX(0px) rotate(0deg); &#125; 100% &#123; opacity: 0; -moz-transform: translateX(100%) rotate(120deg); &#125; &#125; @-o-keyframes rollOut &#123; 0% &#123; opacity: 1; -o-transform: translateX(0px) rotate(0deg); &#125; 100% &#123; opacity: 0; -o-transform: translateX(100%) rotate(120deg); &#125; &#125; @keyframes rollOut &#123; 0% &#123; opacity: 1; transform: translateX(0px) rotate(0deg); &#125; 100% &#123; opacity: 0; transform: translateX(100%) rotate(120deg); &#125; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-animation-name: rollOut; -moz-animation-name: rollOut; -o-animation-name: rollOut; animation-name: rollOut; &#125; 头像效果五12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes swing &#123; 20%, 40%, 60%, 80%, 100% &#123; -webkit-transform-origin: top center; &#125; 20% &#123; -webkit-transform: rotate(15deg); &#125; 40% &#123; -webkit-transform: rotate(-10deg); &#125; 60% &#123; -webkit-transform: rotate(5deg); &#125; 80% &#123; -webkit-transform: rotate(-5deg); &#125; 100% &#123; -webkit-transform: rotate(0deg); &#125; &#125; @-moz-keyframes swing &#123; 20% &#123; -moz-transform: rotate(15deg); &#125; 40% &#123; -moz-transform: rotate(-10deg); &#125; 60% &#123; -moz-transform: rotate(5deg); &#125; 80% &#123; -moz-transform: rotate(-5deg); &#125; 100% &#123; -moz-transform: rotate(0deg); &#125; &#125; @-o-keyframes swing &#123; 20% &#123; -o-transform: rotate(15deg); &#125; 40% &#123; -o-transform: rotate(-10deg); &#125; 60% &#123; -o-transform: rotate(5deg); &#125; 80% &#123; -o-transform: rotate(-5deg); &#125; 100% &#123; -o-transform: rotate(0deg); &#125; &#125; @keyframes swing &#123; 20% &#123; transform: rotate(15deg); &#125; 40% &#123; transform: rotate(-10deg); &#125; 60% &#123; transform: rotate(5deg); &#125; 80% &#123; transform: rotate(-5deg); &#125; 100% &#123; transform: rotate(0deg); &#125; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-transform-origin: top center; -moz-transform-origin: top center; -o-transform-origin: top center; transform-origin: top center; -webkit-animation-name: swing; -moz-animation-name: swing; -o-animation-name: swing; animation-name: swing; &#125; 头像效果六123456789101112131415161718192021222324252627282930313233343536373839404142434445#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes pulse &#123; 0% &#123; -webkit-transform: scale(1); &#125; 50% &#123; -webkit-transform: scale(1.1); &#125; 100% &#123; -webkit-transform: scale(1); &#125; &#125; @-moz-keyframes pulse &#123; 0% &#123; -moz-transform: scale(1); &#125; 50% &#123; -moz-transform: scale(1.1); &#125; 100% &#123; -moz-transform: scale(1); &#125; &#125; @-o-keyframes pulse &#123; 0% &#123; -o-transform: scale(1); &#125; 50% &#123; -o-transform: scale(1.1); &#125; 100% &#123; -o-transform: scale(1); &#125; &#125; @keyframes pulse &#123; 0% &#123; transform: scale(1); &#125; 50% &#123; transform: scale(1.1); &#125; 100% &#123; transform: scale(1); &#125; &#125; #ds-reset .ds-avatar img:hover &#123; -webkit-animation-name: pulse; -moz-animation-name: pulse; -o-animation-name: pulse; animation-name: pulse; &#125; 头像效果七12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes wobble &#123; 0% &#123; -webkit-transform: translateX(0%); &#125; 15% &#123; -webkit-transform: translateX(-25%) rotate(-5deg); &#125; 30% &#123; -webkit-transform: translateX(20%) rotate(3deg); &#125; 45% &#123; -webkit-transform: translateX(-15%) rotate(-3deg); &#125; 60% &#123; -webkit-transform: translateX(10%) rotate(2deg); &#125; 75% &#123; -webkit-transform: translateX(-5%) rotate(-1deg); &#125; 100% &#123; -webkit-transform: translateX(0%); &#125; &#125; @-moz-keyframes wobble &#123; 0% &#123; -moz-transform: translateX(0%); &#125; 15% &#123; -moz-transform: translateX(-25%) rotate(-5deg); &#125; 30% &#123; -moz-transform: translateX(20%) rotate(3deg); &#125; 45% &#123; -moz-transform: translateX(-15%) rotate(-3deg); &#125; 60% &#123; -moz-transform: translateX(10%) rotate(2deg); &#125; 75% &#123; -moz-transform: translateX(-5%) rotate(-1deg); &#125; 100% &#123; -moz-transform: translateX(0%); &#125; &#125; @-o-keyframes wobble &#123; 0% &#123; -o-transform: translateX(0%); &#125; 15% &#123; -o-transform: translateX(-25%) rotate(-5deg); &#125; 30% &#123; -o-transform: translateX(20%) rotate(3deg); &#125; 45% &#123; -o-transform: translateX(-15%) rotate(-3deg); &#125; 60% &#123; -o-transform: translateX(10%) rotate(2deg); &#125; 75% &#123; -o-transform: translateX(-5%) rotate(-1deg); &#125; 100% &#123; -o-transform: translateX(0%); &#125; &#125; @keyframes wobble &#123; 0% &#123; transform: translateX(0%); &#125; 15% &#123; transform: translateX(-25%) rotate(-5deg); &#125; 30% &#123; transform: translateX(20%) rotate(3deg); &#125; 45% &#123; transform: translateX(-15%) rotate(-3deg); &#125; 60% &#123; transform: translateX(10%) rotate(2deg); &#125; 75% &#123; transform: translateX(-5%) rotate(-1deg); &#125; 100% &#123; transform: translateX(0%); &#125; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-animation-name: wobble; -moz-animation-name: wobble; -o-animation-name: wobble; animation-name: wobble; &#125; 头像效果八12345678910111213141516171819#ds-reset .ds-avatar img&#123; width:54px;height:54px; /*设置图像的长和宽，这里要根据自己的评论框情况更改*/ border-radius: 27px;/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/ -webkit-border-radius: 27px;/*圆角效果：兼容webkit浏览器*/ -moz-border-radius:27px; box-shadow: inset 0 -1px 0 #3333sf;/*设置图像阴影效果*/ -webkit-box-shadow: inset 0 -1px 0 #3333sf; -webkit-transition: 0.4s; -webkit-transition: -webkit-transform 0.4s ease-out; transition: transform 0.4s ease-out;/*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/ -moz-transition: -moz-transform 0.4s ease-out; &#125; #ds-reset .ds-avatar img:hover&#123;/*设置鼠标悬浮在头像时的CSS样式*/ box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1); -webkit-box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1); transform: rotateZ(360deg);/*图像旋转360度*/ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); &#125; 头像效果九12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#ds-reset .ds-avatar img:hover &#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 1s; -moz-animation-duration: 1s; -ms-animation-duration: 1s; -o-animation-duration: 1s; animation-duration: 1s; -webkit-transform-style: preserve-3d; -moz-transform-style: preserve-3d; -o-transform-style: preserve-3d; transform-style: preserve-3d; -webkit-backface-visibility: visible !important; -webkit-animation-name: flip; -moz-backface-visibility: visible !important; -moz-animation-name: flip; -o-backface-visibility: visible !important; -o-animation-name: flip; backface-visibility: visible !important; animation-name: flip; &#125; @-webkit-keyframes flip &#123; 0% &#123;-webkit-transform: perspective(400px) rotateY(0);-webkit-animation-timing-function: ease-out;&#125; 40% &#123;-webkit-transform: perspective(400px) translateZ(150px) rotateY(170deg);-webkit-animation-timing-function: ease-out;&#125; 50% &#123;-webkit-transform: perspective(400px) translateZ(150px) rotateY(190deg) scale(1);-webkit-animation-timing-function: ease-in;&#125; 80% &#123;-webkit-transform: perspective(400px) rotateY(360deg) scale(.95);-webkit-animation-timing-function: ease-in;&#125; 100% &#123;-webkit-transform: perspective(400px) scale(1);-webkit-animation-timing-function: ease-in;&#125; &#125; @-moz-keyframes flip &#123; 0% &#123;-moz-transform: perspective(400px) rotateY(0);-moz-animation-timing-function: ease-out;&#125; 40% &#123;-moz-transform: perspective(400px) translateZ(150px) rotateY(170deg);-moz-animation-timing-function: ease-out;&#125; 50% &#123;-moz-transform: perspective(400px) translateZ(150px) rotateY(190deg) scale(1);-moz-animation-timing-function: ease-in;&#125; 80% &#123;-moz-transform: perspective(400px) rotateY(360deg) scale(.95);-moz-animation-timing-function: ease-in;&#125; 100% &#123;-moz-transform: perspective(400px) scale(1);-moz-animation-timing-function: ease-in;&#125; &#125; @-o-keyframes flip &#123; 0% &#123;-o-transform: perspective(400px) rotateY(0);-o-animation-timing-function: ease-out;&#125; 40% &#123;-o-transform: perspective(400px) translateZ(150px) rotateY(170deg);-o-animation-timing-function: ease-out;&#125; 50% &#123;-o-transform: perspective(400px) translateZ(150px) rotateY(190deg) scale(1);-o-animation-timing-function: ease-in;&#125; 80% &#123;-o-transform: perspective(400px) rotateY(360deg) scale(.95); -o-animation-timing-function: ease-in;&#125; 100% &#123;-o-transform: perspective(400px) scale(1);-o-animation-timing-function: ease-in;&#125; &#125; @keyframes flip &#123; 0% &#123;transform: perspective(400px) rotateY(0);animation-timing-function: ease-out;&#125; 40% &#123;transform: perspective(400px) translateZ(150px) rotateY(170deg);animation-timing-function: ease-out;&#125; 50% &#123;transform: perspective(400px) translateZ(150px) rotateY(190deg) scale(1);animation-timing-function: ease-in;&#125; 80% &#123;transform: perspective(400px) rotateY(360deg) scale(.95);animation-timing-function: ease-in;&#125; 100% &#123;transform: perspective(400px) scale(1);animation-timing-function: ease-in;&#125; &#125; 头像效果十123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146/*Head Start*/ #ds-thread #ds-reset ul.ds-comments-tabs li.ds-tab a.ds-current &#123; border: 0px; color: #6D6D6B; text-shadow: none; background: #F3F3F3;&#125;#ds-thread #ds-reset .ds-highlight &#123; font-family: Microsoft YaHei, \"Helvetica Neue\", Helvetica, Arial, Sans-serif; ;font-size: 100%; color: #6D6D6B !important;&#125;#ds-thread #ds-reset ul.ds-comments-tabs li.ds-tab a.ds-current:hover &#123; color: #696a52; background: #F2F2F2;&#125;#ds-thread #ds-reset a.ds-highlight:hover &#123; color: #696a52 !important;&#125;#ds-thread &#123; padding-left: 15px;&#125;#ds-thread #ds-reset li.ds-post,#ds-thread #ds-reset #ds-hot-posts &#123; overflow: visible;&#125;#ds-thread #ds-reset .ds-post-self &#123; padding: 10px 0 10px 10px;&#125;#ds-thread #ds-reset li.ds-post,#ds-thread #ds-reset .ds-post-self &#123; border: 0 !important;&#125;#ds-reset .ds-avatar, #ds-thread #ds-reset ul.ds-children .ds-avatar &#123; top: 15px; left: -20px; padding: 5px; width: 36px; height: 36px; box-shadow: -1px 0 1px rgba(0,0,0,.15) inset; border-radius: 46px; background: #FAFAFA;&#125;#ds-thread .ds-avatar a &#123; display: inline-block; padding: 1px; width: 32px; height: 32px; border: 1px solid #b9baa6; border-radius: 50%; background-color: #fff !important;&#125;#ds-thread .ds-avatar a:hover &#123; &#125;#ds-thread .ds-avatar &gt; img &#123; margin: 2px 0 0 2px;&#125;#ds-thread #ds-reset .ds-replybox &#123; box-shadow: none;&#125;#ds-thread #ds-reset ul.ds-children .ds-replybox.ds-inline-replybox a.ds-avatar,#ds-reset .ds-replybox.ds-inline-replybox a.ds-avatar &#123; left: 0; top: 0; padding: 0; width: 32px !important; height: 32px !important; background: none; box-shadow: none;&#125;#ds-reset .ds-replybox.ds-inline-replybox a.ds-avatar img &#123; width: 32px !important; height: 32px !important; border-radius: 50%;&#125;#ds-reset .ds-replybox a.ds-avatar,#ds-reset .ds-replybox .ds-avatar img &#123; padding: 0; width: 32px !important; height: 32px !important; border-radius: 5px;&#125;#ds-reset .ds-avatar img &#123; width: 32px !important; height: 32px !important; border-radius: 32px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.22); -webkit-transition: .8s all ease-in-out; -moz-transition: .4s all ease-in-out; -o-transition: .4s all ease-in-out; -ms-transition: .4s all ease-in-out; transition: .4s all ease-in-out;&#125;.ds-post-self:hover .ds-avatar img &#123; -webkit-transform: rotateX(360deg); -moz-transform: rotate(360deg); -o-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg);&#125;#ds-thread #ds-reset .ds-comment-body &#123; -webkit-transition-delay: initial; -webkit-transition-duration: 0.4s; -webkit-transition-property: all; -webkit-transition-timing-function: initial; background: #F7F7F7; padding: 15px 15px 15px 47px; border-radius: 5px; box-shadow: #B8B9B9 0 1px 3px; border: white 1px solid;&#125;#ds-thread #ds-reset ul.ds-children .ds-comment-body &#123; padding-left: 15px;&#125;#ds-thread #ds-reset .ds-comment-body p &#123; color: #787968;&#125;#ds-thread #ds-reset .ds-comments &#123; border-bottom: 0px;&#125;#ds-thread #ds-reset .ds-powered-by &#123; display: none;&#125;#ds-thread #ds-reset .ds-comments a.ds-user-name &#123; font-weight: normal; color: #3D3D3D !important;&#125;#ds-thread #ds-reset .ds-comments a.ds-user-name:hover &#123; color: #D32 !important;&#125;#ds-thread #ds-reset #ds-bubble &#123; display: none !important;&#125;#ds-thread #ds-reset #ds-hot-posts &#123; border: 0;&#125;#ds-reset #ds-hot-posts .ds-gradient-bg &#123; background: none;&#125;#ds-thread #ds-reset .ds-comment-body:hover &#123; background-color: #F1F1F1; -webkit-transition-delay: initial; -webkit-transition-duration: 0.4s; -webkit-transition-property: all; -webkit-transition-timing-function: initial;&#125;/*Head End*/ 头像效果十一123456789101112131415161718192021222324252627282930313233/*头像样式*/#ds-reset .ds-avatar &#123; background:none !important; box-shadow:none !important;&#125;#ds-reset .ds-avatar img , #ds-thread #ds-reset ul.ds-children .ds-avatar img &#123; width:50px !important; height: 50px !important; -webkit-transition: .9s; -moz-transition: .9s; -o-transition: .9s; -ms-transition: .9s; padding: 2px; border: 1px solid #ddd; background: #fff;&#125;/*鼠标悬停旋转头像*/.ds-post:hover .ds-avatar img &#123; transform:rotate(360deg); -webkit-transform:rotate(360deg); -moz-transform:rotate(360deg); -o-transform:rotate(360deg); -ms-transform:rotate(360deg); border-radius:30px !important;&#125;#ds-reset .ds-avatar img:hover &#123; transform:rotate(360deg); -webkit-transform:rotate(360deg); -moz-transform:rotate(360deg); -o-transform:rotate(360deg); -ms-transform:rotate(360deg); border-radius:30px !important;&#125; 特别感谢：@V说 @wsgzao","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://vioren.space/tags/Hexo/"},{"name":"多说评论","slug":"多说评论","permalink":"http://vioren.space/tags/多说评论/"},{"name":"前端开发","slug":"前端开发","permalink":"http://vioren.space/tags/前端开发/"}]},{"title":"使用GitHub和Hexo搭建免费静态Blog","date":"2016-09-22T07:27:17.000Z","path":"archives/hexo/","text":"前言习惯自己写Blog的朋友一定不会陌生Wordpress，或许也曾在新浪博客和QQ空间留过脚印，但静心认真思考一下，似乎我们又总是向往更加简单自由的写作方式。GitHub给我们提供了一个无限的空间，我们需要珍惜使用，而Hexo的出现从某种意义上来说代替了Jekyll，让我们可以更专注于写作本身。 喜欢写Blog的人，会经历三个阶段。第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。 大多数Blog作者，都停留在第一和第二阶段，因为第三阶段不太容易到达：你很难找到俯首听命、愿意为你管理服务器的人。 但是六年前，情况出现变化，一些程序员开始在GitHub网站上搭建blog。他们既拥有绝对管理权，又享受GitHub带来的便利—-不管何时何地，只要向主机提交commit，就能发布新文章。更妙的是，这一切还是免费的，GitHub提供无限流量，世界各地都有理想的访问速度。 今天，我就来示范如何在GitHub上搭建Blog，你可以从中掌握GitHub的Pages功能，以及Hexo软件的基本用法。更重要的是，你会体会到一种建立网站的全新思路。 概要GitHub Pages 是什么？如果你对编程有所了解，就一定听说过GitHub。它号称程序员的Facebook，有着极高的人气，许多重要的项目都托管在上面。简单说，它是一个具有版本管理功能的代码仓库，每个项目都有一个主页，列出项目的源文件。 但是对于一个新手来说，看到一大堆源码，只会让人头晕脑涨，不知何处入手。他希望看到的是，一个简明易懂的网页，说明每一步应该怎么做。因此，GitHub就设计了Pages功能，允许用户自定义项目首页，用来替代默认的源码列表。 所以，GitHub Pages可以被认为是用户编写的、托管在GitHub 上的静态网页。 GitHub 提供模板，允许站内生成网页，但也允许用户自己编写网页，然后上传。有意思的是，这种上传并不是单纯的上传，而是会经过Hexo或Jekyll等程序的再处理。 什么是Hexo？Hexo 是一个快速、简洁且高效的基于Node.js的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。作者是来自台湾的@tommy351。 A fast, simple &amp; powerful blog framework, powered by Node.js. 类似于jekyll、Octopress、Wordpress，我们可以用Hexo创建自己的博客，托管到github、Heroku或Coding上，绑定自己的域名，用markdown写文章。本博客即使用hexo创建并托管在github上。 为什么要用hexo 不可思议的快速 ─ 只要一眨眼静态文件即生成完成支持 Markdown仅需一道指令即可部署到 GitHub Pages 和 Heroku已移植 Octopress 插件高扩展性、自订性兼容于 Windows, Mac &amp; Linux 易用。不仅部署简单，平时使用中仅需要hexo new hexo generate hexo server hexo deploy四个命令。不像Jekyll需要很多繁琐的git命令。 轻。文件少、小，易理解，方便自定义。 用户多。虽然赶不上Jekyll和Octopress，但遇到什么问题都能搜索到答案，或者找到同样使用hexo的用户进行参考和咨询。 谁能使用hexo这是一个免费开源的博客程序，任何人都可以使用和修改。但是不同于wordpress，hexo由于需要使用Github,Git,Markdown,Node.js这样的工具，好多插件、widget都需要自己安装、设置。所以适合那些有一定计算机基础，喜欢折腾的人。但是，不要恐惧，只要跟着本教程走，就能很方便地让自己的博客”飞起来”。 怎样搭建hexo博客正题来了，请认真往下看吧。 准备工作注意 本文主要针对Windows平台和Hexo 3.x 安装GIT下载 Git 并执行即可完成安装。So Easy 安装Node.JS在 Windows 环境下安装Node.js非常简单，仅须下载Node.JS并执行即可完成安装。So Easy 安装Hexo在任意位置右键，选择Git Bash Here123npm install hexo-cli -g#如果命令无法运行，可以尝试更换taobao的npm源npm install -g cnpm --registry=https://registry.npm.taobao.org Hexo初始化配置创建hexo文件夹安装完成后，根据自己喜好建立目录(如D:\\hexo)，在该文件夹下右键–Git Bash Here。执行以下命令1hexo init 安装依赖包1npm install 该命令会将hexo所需文件自动下载到hexo文件夹下。12345678910#新建完成后，指定文件夹的目录如下.├── _config.yml├── package.json├── scaffolds├── scripts├── source| ├── _drafts| └── _posts└── themes 安装Hexo插件(可省略)12345678910111213npm install hexo-generator-feed --savenpm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --savenpm install hexo-generator-json-content --savenpm install hexo-deployer-git --savenpm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --save 查看本地运行效果现在我们已经搭建起本地的Hexo博客了，继续执行以下命令(在D:\\Hexo)，成功后即可登录localhost:4000查看效果，运行显示了相关页面，说明当前网站已经在本地建立。12hexo generatehexo server 好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。 配置GitHub注册Github账号已有账号可以跳过，没有的，请登录GitHub进行注册，很简单，这里就不介绍了。 创建repository在自己Github主页右下角，创建New repository。比如我的Github账号是vioren，那么我应该创建的repository名字应该是vioren.github.io。首次创建耐心等待10分钟左右审核，之后即可访问静态主页如http://vioren.github.io 配置部署编辑_config.yml(在D:\\hexo下)。你在配置时，要把下面的vioren都换成你的账号名。1234deploy: type: git repository: https://github.com/vioren/vioren.gith防和谐ub.io.git branch: master 注意：type:空格git。都要使用空格，否则会出错。 配置本机的ssh key通过ssh keys就可以将本地的项目与Github关联起来 检查本机ssh key1cd ~/.ssh 提示：没使用过Git就会显示：No such file or directory 生成新的ssh keys123$ ssh-keygen -t rsa -C \"邮件地址@youremail.com\"Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车&gt; 注意：-C为大写的C接下来会让你输入密码12Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;Enter same passphrase again:&lt;再次输入加密串&gt; 注意：输入密码时是不会显示密码的，依次输入就好了如果显示为下界面，就说明设置ssh key成功了 添加ssh key到Github 搜索本机上的id_rsa.pub文件。或在C:\\Users\\用户名\\.ssh路径下找到该文件，以记事本打开，复制其中的内容。 进入自己的Github，右上角齿轮setting—左边列表SSH keys—Add SSH key。将内容复制到文本框（不用取title名字）。注意：这时Github会给你的邮箱发送一封邮件，打开邮件确认下就好了。 测试通信1ssh -T git@github.com 如果是以下反馈123The authenticity of host 'github.com (207.97.227.239)' can't be established.RSA key fingerprint is 16:27:ac:a5:76:28:防和谐2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no)? 输入yes1Hi yourusername! You've successfully authenticated, but GitHub does not provide shell access. 这时候说明能够通过SSH链接到你的Github了，接下来完善一下你的个人信息。Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。12git config --global user.name \"Tim\" #用户名git config --global user.email \"tim@gmail.com\" #填写自己的邮箱 使用Hexo克隆主题自己使用的是Yilia主题，比较喜欢，以这款主题为例。 克隆主题1git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 配置修改hexo根目录下的_config.yml：1theme: yilia 更新12cd themes/yiliagit pull 本地查看12hexo ghexo s 浏览器输入localhost:4000，查看主题是否成功。 部署上传123hexo cleanhexo ghexo d 会让你输入用户名和密码，依次输入就好。 部分Hexo主题推荐 选择主题建议遵循KISS原则 Hexo Themes - http://hexo.io/themes/Themes · hexojs/hexo Wiki - https://github.com/hexojs/hexo/wiki/Themes Yilia - http://litten.github.io/2014/08/31/hexo-theme-yilia/Jacman - http://wsgzao.github.io/post/hexo-jacman/NexT - http://theme-next.iissnan.com/ 绑定域名和DNS设置设置CNAME 打开Github–空间Repository的根目录下–点击“+”creat a new file–命名为CNAME，文本框中输入自己需要绑定的域名如vioren.com。 点击右下角的【Download ZIP】,下载项目，解压压缩包，将其中的CNAME文件复制到hexo根目录下。12hexo ghexo d DNS设置注册登录DNSPod，先添加域名，然后添加记录，设置如下 主机记录 记录类型 线路类型 记录值 MX优先级 TTL @ CNAME 默认 vioren.github.io. - 10 www CNAME 默认 vioren.github.io. - 10 域名推荐 GoDaddy makes registering Domain Names fast, simple, and affordable.【推荐理由】两个字“靠谱”，支持支付宝，附优惠码链接http://www.godaddy.com/http://www.gdcodecoupon.com/ DNS推荐 致力于为您提供最稳定、最安全的域名解析服务【推荐理由】依然是两个字“靠谱”，感谢他们一直以来对于公益的坚持https://www.dnspod.cn/ 开始写文章1hexo new \"postName\" 或路径D:\\hexo\\source\\_posts下新建文件postName.md就可以了文章内容和格式如下：123456789---title: 标题date: YYYY-MM-DD hh:mm:sstags: 标签 #多标签时以[tag1,tag2]格式填写categories: 类别 #多类别时以[category1,category2]格式填写---主页可显摘要&lt;!-- more --&gt; #阅读全文分隔符展开余下全文 正文内容使用Markdown语法进行书写 其他相关常见问题 修改配置文件时注意YAML语法，参数冒号:后一定要留空格 中文乱码请修改文件编码格式为UTF-8 Error代码:「warning: LF will be replaced by CRLF」在hexo deploy时，有时会出现这个提示信息warning: LF will be replaced by CRLF，虽然看起来挺乱糟糟的，但不影响使用，可以忽略不计。若想不提示，可以使用如下方法： 切换到博客的根目录，执行如下命令：git config --global core.autocrlf false 删除掉该目录下的.git文件夹（可能是隐藏的），命令：rm -rf .git 重新git init。 再deploy试试吧，清新脱俗了。 Error代码:hexo deploy 没反应好多网友遇到过这个问题，目前来看，主要问题出在config.yml的deploy配置上。注意缩进，同时注意冒号后面要有一个空格。Error代码:hexo update -g 升级错误，hexo命令失效我升级时遇到了这个问题，原因不详。这种情况下，可执行npm install hexo-cli -g重新安装一遍Hexo，效果跟升级一样。Error代码:hexo指令无法执行可能是升级方法不对，导致hexo generate指令也无法执行，后来索性重装了git和node，重新安装hexo，generate和server指令都能执行了，但是出现了“Deployer not found: github”。Error代码:Deployer not found: git更改_config.yml主配置文件为utf-8编码时导致的异常。执行npm install hexo-deployer-git --save然后重新deploy即可。 各版本所做更新修正，请参考这里。 如何迁移至Hexohttp://hexo.io/zh-cn/docs/migration.html Hexo命令12345678910hexo init &lt;folder&gt; #初始化一个网站目录 我是直接cd到目标目录执行hexo init的hexo new \"postName\" #新建文章，或者source\\_posts手动编辑hexo new page \"pageName\" #新建页面 默认链接为:主页地址/pageName/hexo clean #清除缓存文件db.json和已生成的静态文件publichexo generate #生成public静态文件至public目录hexo server #本地发布预览效果 http://localhost:4000 ('ctrl + c'关闭server)hexo deploy #将.deploy目录部署到GitHubhexo --debug #在终端中显示调试信息并记录到 `debug.log`hexo help #查看帮助hexo version #查看Hexo的版本 Hexo简写命令1234hexo n \"postName\" #新建文章，或者source\\_posts手动编辑hexo g #生成public静态文件至public目录hexo s #本地发布预览效果 http://localhost:4000 ('ctrl + c'关闭server)hexo d #将.deploy目录部署到GitHub Hexo复合命令1234hexo d -g #生成并部署上传hexo s -g #生成并本地发布预览hexo clean &amp;&amp; hexo d -g #清空缓存然后生成并部署上传hexo clean &amp;&amp; hexo s -g #清空缓存然后生成并本地发布预览 本文部分说明来自互联网特别感谢 @wsgzao @阮一峰 @TimFei @Litten @陈素封 @zippera @不如","tags":[{"name":"软件开发","slug":"软件开发","permalink":"http://vioren.space/tags/软件开发/"},{"name":"Hexo","slug":"Hexo","permalink":"http://vioren.space/tags/Hexo/"}]},{"title":"记一次安卓Unity3d游戏的逆向分析","date":"2016-09-20T15:27:09.000Z","path":"archives/crackunity3d/","text":"使用到的工具 ApkToolBox.NET ReflectorReflexil(.NET程序编辑器) 怎么判定它是Unity游戏呢一般的路径格式是这样的assets\\bin\\Data\\Managed[如果是个Unity游戏却找不到dll文件那么骚年放弃吧。。。] 一般情况下都是修改上图的这个dll文件[如果想要搜索的东西不在这个dll文件可借用UltraEdit、EditPlus、Notepad++等常用编辑工具辅助搜索来判断对哪个dll文件进行修改 以Jam City这款游戏为例来作以下分析： 内购破解部分就不讲了，因为下面将要修改的比内购的要来的痛快用ApkToolBox反编译之后找到dll文件就是上图的那个文件用.NET Reflector打开[.NET Reflector工具的基本使用方法请自行百度]在手机上试玩了下这个游戏 篮板和抢断的路线根本就不明确嘛。。。 金币-Coin、等级-Level 那么着重修改这两个值吧 按下F3搜索，切换到方法搜索搜到的内容这么多 改哪个呢 头疼啊！ 等等！unity3d提供的有存档类啊！这是一大重要的切入点O(∩_∩)O~ unity3d提供了一个用于本地持久化保存与读取的类——PlayerPrefs。其工作原理非常简单，以键值对的形式将数据保存在文件中，然后程序可以根据这个名称取出上次保存的数值。PlayerPrefs类支持3种数据类型的保存和读取，浮点型，整形，和字符串型。 游戏本地存档的主要方式无外乎xml文件和数据库存储两种，我们安装运行该游戏并简单的通过买物品和升级改变金币和等级的数值。 然后通过R.E.管理器进入/data/data/com.batteryacid.jamcity/shared_prefs/果然我们发现了命名包含playerprefs的xml存档文件 查看该文件，如下图，我们发现了与游戏中数值对应的两个 字符串-整型 键值对条目：金币Currency和等级CurrentLevel 我们回到.NET Reflector 切换到类搜索，搜索PlayerPrefs得到下图结果，双击进入位于Assembly-CSharp集中的PlayerPrefsx类 双击进入GetInt(String,Int32)整型方法，Tools —- reflexil v1.6 开启reflexil工具 然后在第一行“Create new…”新建字符串类型(OpCade代码为ldstr)，最后“Insert before select”插入到第一行前 在第二行新建整型(OpCade代码为ldc.i4) 在第三行新建方法(OpCade代码为call)，并在PlayerPrefsx类中选择GetInt(System.String,System.Int32)方法 这样，我们就将Currency强制设置为66666668了回到dll文件名这里，右键鼠标移到Reflexil v1.6保存dll 保存之后，F5刷新一下，如下图，代码中显示的是强制设置为了66666668 同理，我们也将等级CurrentLevel也强制设置为20 保存dll文件用IDE编译出来apk 看看效果 好了，初始金币和等级都修改成功 步骤回顾：1、反编译apk2、利用.NET Reflector反编译dll3、通过Unity3d的PlayerPrefs方法了解其写入读取过程4、通过查找存档xml文件找到相应控制条件5、在dll中找到相应位置修改代码段 总结：本文主要介绍安卓unity3d游戏的本地数据的修改方法。","tags":[{"name":"Android","slug":"Android","permalink":"http://vioren.space/tags/Android/"},{"name":"逆向札记","slug":"逆向札记","permalink":"http://vioren.space/tags/逆向札记/"}]},{"title":"小镜头大视角：摄影师用iPhone拍摄乐高人偶的生活","date":"2016-01-04T06:51:10.000Z","path":"archives/legotwo/","text":"『摄影师』Andrew Whyte：带着乐高小人去旅行 乐高玩具在全世界都拥有著无数粉丝，与之相关的《The Lego Movie》也是横扫世界各地的电影票房。当然，乐高玩具人人会玩，可要是想以这些小方块创作出壹些艺术作品的话可就不是那么容易了。如果你找不到什么灵感的话，那不如来看看摄影师 Andrew Whyte 利用乐高玩偶创造的「Legography」系列作品吧。 Andrew Whyte 擅长利用长曝光等方式创作变化多端的微观风格摄影作品。在「Legography」系列作品中，他通过技术手段巧妙地将玩偶所处的微观环境以拟人化的形态呈现在大家眼前。玩偶好似壹个现实世界中的真实身影，在不同的场景中展开各种离奇的故事。 想要了解更多有关「Legography」作品的朋友可以访问 Andrew Whyte 的官方网站。 手机镜头的视角与相机大不相同，为了达到目标，作者尝试了19次才把相机玩具扔到了正确地位置。 iPhone 4s在低光照的情况下画质不佳，即使这样，这张黄昏时的照片还是可以接受的 很多时候乐高摄影需要趴在地上完成，作者因此也成为了其他游客的拍摄对象 作者收集了许多腿、躯干、帽子的零件，能帮助小人偶进行换装 天气不好的时候拍摄仍没有停止，作者还为小人偶加了件雨衣 有时为了拍摄与野生动物相关的照片，作者遭遇了器械的损坏，甚至还受了伤 拍摄于朴茨茅斯，英国唯一的岛屿城市。 由于人偶的表情不能变化，所以大部分的照片都避开了正面，这是唯一的一张人偶自拍照 SlowShutter实现了作者对于长曝光app的期望，其对焦与曝光锁在黑暗中相当有用 天气一般时，往往尝试了各种滤镜后也不能获得满意的效果。但有时等到第二天早上，就能拍到不需要后期的满意照片 英国摄影师Andrew Whyte专长于戏剧灯光艺术与对于夜空的长时间曝光，但他最近的一些工作相当引人注目——他为一位一英寸高的小小摄影师拍摄了一组照片。Whyte花了超过一年的时间拍摄了这组称为“乐高摄影师”的系列作品，其中的主角是一个手拿黑色相机的乐高积木人偶。这个小人偶和Whyte一起旅行，一起看日出，一起在伦敦游览。 考虑到便携性，这组乐高摄影是由iPhone完成的，从最初的4s到现在的5s。Whyte使用一款称为645 Pro的应用来获得更多的手动拍摄选项，然后使用Snapseed特效进行后期后上传到乐高摄影的Facebook页面。“作为对于手机摄影的探索，这个项目相当具有启发性，我知道了我能够在几乎任何地方都能用手机拍出高水准的作品。”Whyte说道。另外他还有一些其他的长曝光摄影作品。 英国摄影师Andrew Whyte是一位擅长在弱光环境下创作的职业摄影师。他认为弱光环境下的摄影可以让“光线”和“时间”这两种最具魅力的元素交织在一起。但是在他的整个摄影职业当中，有一个非常重要的摄影项目却并非专注于弱光环境的拍摄，而是一个以乐高玩具小人为主人公的系列作品——《Legography》。 作品中的玩具小人扮演了摄影师的角色，“他”用自己的相机去看世界，而我们也从照片中看到了“他”看到的世界，从作品中你甚至可以读出“他”的性格：执着、专注、勇敢，对摄影有一种热烈的追求，你也能从“他”观看世界的角度中感受到“他”的情绪：思念、好奇、陶醉、孤独…… 类似于这样以玩具或者公仔作为摄影兴趣中心的作品相信大家也看过不少。这样的作品很容易具有故事性，也就很容易让我们进入画面，获得情景设置所要传达的感受。 值得一提的是，这个系列的作品均为手机拍摄，并用手机软件修图制作完成。 乐高不一定是小朋友们钟爱的玩具，很多大人也对乐高情有独钟。摄影师Andrew Whyte作为一名“乐高控”，走到哪都要带着他的“Legographer”，于是便有了这一系列照片。 Andrew Whyte来自英国，“Legographer”大部分照片拍摄于英格兰南部的著名海滨城市朴茨茅斯。这一系列照片均出自iPhone 4s，拍摄软件为645 Pro Mark II，并经过Snapseed后期处理。这样的拍摄组合另很多人意外，其实Andrew有意想挑战一下手机的弱光拍摄效果，同时也可以达到在实战中提升自己拍摄水平的目的。毫无疑问，他的目的达到了。 英国摄影师Andrew Whyte用镜头记录乐高人偶的英国游记，透过“Mini摄影师”的角度重新看世界！ 凭着一点玩心和创意，英国摄影师Andrew Whyte突发奇想，以乐高 (Lego) 小人为主角记录下了他眼中的英伦风光。这位身材小小的“摄影师”相当敬业，克服千难万险拍摄了落日、彩虹等一系列美丽风景。一起来看看吧！ 其实，Andrew Whyte不仅为我们带来了一组创意十足的旅行摄影图集，还十分贴心地整理出拍摄这类照片运用的方法和一些注意事项，接下来是“带着乐高小人去旅行”教学篇！ 给大家介绍了摄影师Andrew Whyte拍摄的“带着乐高小人去旅行”系列照片，这组照片给人眼前一亮的感觉。其实摄影师不但介绍了这些照片的拍摄背景和器材使用情况，更加难能可贵的是，还为大家总结出了5点拍摄类似专题的注意事项，希望大家看后能有所收获： 寻找一个有趣的故事：任何一个拍摄活动都有主题，这是大家首先要确定的事情。接下来就可以围绕这个主题开始拍摄，可以尝试不同的手法，控制好大场景中的人物比例、小范围的景深问题等。 低角度：有时候我们习惯了同一高度拍摄，却忘了低角度可能有令人意想不到的效果。就像这组照片，很多时候都是贴着水平线拍摄，这样的角度给人新鲜的感觉，把视角低下来没准就能看到另一个世界。 运用技巧弥补：手机拍摄有很大的局限性，但是运用一些小技巧完全可以弥补。例如手机在弱光环境下表现不尽如人意，可以运用手电等照明装置给主体打光;在阴雨天路面积水会反光，这时可以利用影子来遮挡，这样就可以解决光比大的问题了。 反复确定对焦点：刚刚提到了手机拍摄的局限性，所以在拍摄时需要反复确定对焦点，这样才能保证对焦准确。 善于使用App：这组照片使用了645 Pro Mark II和Snapseed，这两个软件搭配使用效果很好。但不意味着大家也要使用，只要运用自己习惯的App，在拍摄是最大限度的发挥其功效，就能拍出满意的照片。","tags":[{"name":"宇宙之大","slug":"宇宙之大","permalink":"http://vioren.space/tags/宇宙之大/"}]},{"title":"英夫妇带\"乐高玩具人偶\"全球旅行，另类情侣照获热捧。","date":"2016-01-01T06:32:05.000Z","path":"archives/legoone/","text":"英格兰夫妇克雷格·麦克卡特尼（Craig McCartney）与林德赛·哈格蒂（Lindsey Haggerty）正进行“乐高全球旅行”，他们携带着以自己为蓝本、用乐高玩具拼成的情侣假人进行全球旅行，为“乐高情侣”拍摄的另类情侣照网上受热捧。 麦克卡特尼与哈格蒂正在环球自助游，除了携带背包、地图、照相机外，他们还用乐高玩具拼成人偶，每到一地就用人偶拍照，并将这些另类情侣照传到网上，引发网络风潮。 麦克卡特尼与哈格蒂已经去过法国、葡萄牙、西班牙、丹麦、老挝、越南、马来西亚、泰国，目前正在澳大利亚拍照。他们的Facebook帐号已经有数千名“粉丝”。 麦克卡特尼说：“在我考虑送女友30岁生日礼物时，我看到了乐高相机。这给我了很多灵感，因为我们喜欢多地旅游。而当我们到达新的城市时，哈格蒂总是拍照留念，而我则拿着地图和背包。” 麦克卡特尼还说：“我做了两个乐高小人儿代表我们两人，乐高哈格蒂身上带着相机，乐高麦克卡特尼则背着包拿着地图，这是我们在巴黎庆祝哈格蒂30岁生日时，我送她的第一份礼物。你可能惊异于我们花费多长时间拍摄到如此恰到好处的照片，因为即使最轻微的风都能将小人儿刮倒，为此我们总是需要找好适当的高度，以固定好它们。”","tags":[{"name":"宇宙之大","slug":"宇宙之大","permalink":"http://vioren.space/tags/宇宙之大/"}]},{"title":"tomcat+java的web程序持续占cpu问题调试","date":"2015-12-23T06:17:44.000Z","path":"archives/highcpu/","text":"[线上应用故障排查之：高CPU占用]一个应用占用CPU很高，除了确实是计算密集型应用之外，通常原因都是出现了死循环。以我们最近出现的一个实际故障为例，介绍怎么定位和解决这类问题。现象：在tomcat中部署java的web应用程序，过一段时间后出现tomcat的java进程持续占用cpu高达100%，导致web程序访问受阻。可能原因分析：可能程序确实在进行数据计算；或程序进入死循环。解决方法： 根据top命令，查看占用cpu的进程PID，发现PID为2738的Java进程占用CPU高达99.9%，出现故障。 通过ps aux | grep PID或ps -ef | grep PID命令，定位具体的进程主体，如是否是tomcat启动的java进程出现了问题。但是，怎么定位到具体线程或者代码呢？首先显示线程列表: 用ps -mp PID -o THREAD,tid,time命令打印出该进程下的线程占用cpu情况找到了耗时最高的线程2804，占用CPU时间快三个半小时了！ 其次用printf &quot;%x\\n&quot; TID命令将需要的线程ID转换为16进制格式： 最后用jstack PID |grep tid -A 30命令打印线程的堆栈信息： 找到出现问题的代码了！ 现在来分析下具体的代码即可： 找到出现问题的代码，并分析具体函数中是否有可能出现死循环的代码段。通常问题出现在while， for之类的循环代码片段。 AlarmSendListener.run(AlarmSendListener.java:98)SnmpTrapThreads.run(SnmpTrapThreads.java:66)ProduceAlarmEvent.run(ProduceAlarmEvent.java:50) 最后，总结下排查CPU故障的方法和技巧有哪些：1、top命令：Linux命令。可以查看实时的CPU使用情况。也可以查看最近一段时间的CPU使用情况。2、PS命令：Linux命令。强大的进程状态监控命令。可以查看进程以及进程中线程的当前CPU使用情况。属于当前状态的采样数据。3、jstack：Java提供的命令。可以查看某个进程的当前线程栈运行情况。根据这个命令的输出可以定位某个进程的所有线程的当前运行状态、运行代码，以及是否死锁等等。4、pstack：Linux命令。可以查看某个进程的当前线程栈运行情况。 特别感谢@hankchen","tags":[{"name":"软件开发","slug":"软件开发","permalink":"http://vioren.space/tags/软件开发/"},{"name":"Java","slug":"Java","permalink":"http://vioren.space/tags/Java/"}]},{"title":"化学geek是怎么玩坏表情包的：翻滚吧，苯宝宝！","date":"2015-12-08T04:51:33.000Z","path":"archives/benzenebaby/","text":"最近在网上，大家可能会看到一系列“苯宝宝”的表情，简单说就是用苯环和相关化合物来取谐音做表情，像这样： 虽然对化学有点感情，不过Po主对这个表情还是不满意，化学狗的脑洞并没有得到充分展现嘛……而且说实话也不大好看。 于是！我开拓了一下脑洞，自己画了一组表情包和大家共赏(:з」∠) 你们如果有什么好的脑洞，也欢迎发给我233 总之，下面的内容可能会很冷，请准备好热水袋…… 嗯别装醇了，你就是一个酚，还是最简单的酚。（顺便，苯酚还是生产阿司匹林的重要原料~ 说起来，“多虑”的话，难道不应该是多氯联苯吗—— 苯宝宝多氯加强版：联苯也多氯了！ 多氯联苯是一系列化合物的统称，它们也是需要警惕的环境污染物 三硝基甲苯，也就是TNT啦 嗯如果苯加氢到饱和，也就是环己烷了……不少涂改液的溶剂是甲基环己烷，你可能还记得它的气味 砜是一种含硫化合物，如果少一个氧的话就是亚砜，不少实验室可能会用到二甲亚砜这种东西。 嗯，正辛酸呢…… 下面还有几个后续脑洞： 萘铌~有点像是象形火星文= = 两个苯环并在一起就是萘 这个是蒽重如山…… 三个苯环并一排就是蒽环(:з」∠) 总之今天的脑洞就到这儿了……欢迎大家一起交流冷梗(:з」∠) 以下是评论精选：苯宝宝炸了！ 看穿一切的六甲基四氢化萘 毫无违和感—— 最后附送一个英语世界里的“苯宝宝”梗： diene是二烯的意思，而且读起来也像是dying，于是也就被画成了小人儿蹬腿的样子~","tags":[{"name":"宇宙之大","slug":"宇宙之大","permalink":"http://vioren.space/tags/宇宙之大/"}]},{"title":"几种VCS(版本控制系统)的特点和异同","date":"2015-12-05T01:56:40.000Z","path":"archives/vcs/","text":"版本控制系统（version control system）,是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。版本控制系统不仅可以应用于软件源代码的文本文件，而且可以对任何类型的文件进行版本控制。用的比较多的如svn，git等。 为了让不同系统上的开发者能够协同工作，集中化的版本控制系统应运而生（CVCS）。这类系统都有一个单一的集中管理的服务器，保存所有文件的修订版本。而协同工作的人们都通过客户端连接到这台服务器，获取最新的文件或者提交更新。集中化的版本控制系统，最显而易见的缺点是中央服务器的单点故障问题。如果宕机，那么就会出现谁都无法提交更新的情况，那么也就无法协同工作；如果磁盘发生故障，而备份又不够即时，那么就有丢失数据的风险，最坏的情况是丢失整个项目的历史更改记录。因此，分布式版本控制系统问世了（DVCS）。 在分布式版本控制系统中，客户端不仅仅是只提取最新版本的文件快照，而是把代码仓库完整的镜像下来。所以每一次提取的操作，都是对代码仓库的完整备份，因此也就不必担心协同工作用的服务器发生故障。 Git和其他版本控制系统的主要差别在于：Git只关心文件数据的整体是否发生了变化，而多数的其他系统则只关心文件内容的具体差异，它们在每个版本中记录着各个文件的具体差异。在Git中的绝大多数操作都只需要访问本地文件和资源，不需要联网。这是因为Git在本地磁盘上就保留着所有当前项目的历史更新，所以处理起来速度飞快，这是使用空间换时间的处理方式。使用Git，即使在没有网络或VPN的情况下，你同样可以非常愉快的频繁提交更新，等到有了网络的时候再提交到远程的仓库。 CVS : Git : Mercurial : Subversion 的异同特征是否原子提交CVS: 没有. CVS提交不是原子的Git: 是的. 提交都是原子的Mercurial: 是的Subversion: 提交都是原子的 文件和目录是否可以移动或重命名CVS: 不是. 重命名不支持. 如果手动进行, 可能会损坏历史记录Git: 支持重命名, 这是很实用的目的. git甚至能检测到重命名之后文件的改变. 尽管如此, 基于特殊的存储结构, 重命名不会被显示的记录, git能够推导出来(在实际使用中很容易做到)Mercurial: 是的, 重命名是支持的Subversion: 是的. 支持重命名 在移动或重命名之后智能合并CVS: 不能. 重命名都不支持, 就不必说智能了Git: 不支持. 细节在Git FAQ里: “Git有一个重命名的命令git mv, 但是这仅仅是为了便利. 效果和移掉某个文件, 增加另外一个文件没有任何区别”Mercurial: 是的. 重命名之后智能合并是支持的. Mercurtial文档说:“如果我修改一个文件,而你重新命名了这个文件, 然后我们合并我们的变更, 那么我所做的修改就会被更新到根据旧文件名字而产生的新文件里(这可能就是你所期望的‘最简单的动作’, 但是不是所有版本控制系统都支持)Subversion: 不支持. “svn help me“中提到“注意: 这个子命令相当于拷贝和删除.“并且可能有个bug 文件和目录拷贝CVS: 不能. 拷贝不支持Git: 不能. 拷贝不支持Mercurtial: 是的. 支持拷贝Subversion: 是的. 并且拷贝非常容易(O(1)). 包括产生分支 远程存储仓库的备份CVS: 间接的. 可以使用John Polstra写的CVSupGit: 是的. 是git的内部特征Mercurial: 是的Subversion: 间接的. 可以使用Chia-liang Kao的SVN::Mirror插件(好像是台湾人)或Shlomi Fish的SVN-Pusher工具 是否传递变更到父仓库CVS: 不会Git: 是的(Linux内核开发过程经常使用这个特征)Mercurtial: 是的Subversion: 是的, 使用要么是Chia-Ling Kao的SVN::Mirror脚本或者Shlomi Fish的svn-push工具 仓库权限CVS: 很有限. “pre-commit hook scripts“能够被用来实现各种权限控制系统Git: 请看和Git一起附带的contrib/hooks/update-paranoid. 看和svnperms类似的path_rules的代码Mercutial: 是的. 它能够锁住仓库, 子目录或者使用hooks后的文件Subversion: 是的. 基于HTTP权限的WebDAV-based模块能够支持基于目录级的仓库 变更集CVS: 不是. 变更是基于文件的Git: 是的. 是支持的, 创建他们很容易Mercurial: 是的. 变更集是支持的Subversion: 部分支持. 对于一次提交会隐式创建一个变更集 跟踪线性的文件历史CVS: 是的. cvs annotateGit: 是的.(git blame)Mercurial: 是的(hg annotate)Subversion: 是的(svn blame) 能够只在仓库的单目录下作用CVS: 是的Git: 不是. 尽管如此, 提交多少能被限制, 请看“Repository Permissions”Mercurial: 能够基于某树的某个子集进行提交. 也有局部检出的能力Subversion: 是的 跟踪未提交的变化CVS: 是的. 通过cvs diffGit: 是的. 另外, 分支在git里非常智能, 在某些工作流里能够被当成是另外一个未提交代码的存储库. 请看“git stash“命令Mercurial: 是的. 使用hg diffSubversion: 是的. 使用svn diff 基于单个文件的提交信息CVS: 不是. 提交信息是基于单次变化的Git: 是的. 提交信息基于变更集Mercurial: 不是Subversion: 不是. 没有这个特征 文档CVS: 非常棒. 有很多在线的tutorials和资源, 在线的书籍. 命令行客户端也支持一个在线的帮助系统Git: 良好. 短的帮助比较简洁难懂. man页很有分量, 但容易误解. 有很多tutorialMercurial: 很好. 有基于公司的书籍和wiki. 每个命令都集成了帮助Subversion: 很好. 有一些在线的书籍和一些在线的tutorials和资源. 并且书籍是以docbook/xml写的所以很容易变换成其他格式. 命令行同样提供了在线的帮助系统 配置是否轻松CVS: 好. 是个事实上的标准. 基于每个系统都有并且很容易配置Git: 好. 在现有平台上二进制可用. 需要C编译器和Perl. 在windows上需要cygwin. 并有一些Unix特征Mercurial: 非常好. 几乎所有平台都有二进制包. 从源码编译需要python2.3以上, 并且需要C编译器Subversion: Subversion服务器需要安装在apache2模块里(如果有人希望HTTP作为底层协议的话)或使用它自身的服务器. 客户端需要Subversion特征的逻辑还有WebDAV库(针对HTTP). 安装组件很直接, 但是需要一些额外的工作(假定subversion在某些平台没有二进制包可用) 命令集CVS: 包含了3个经常用到的命令的简单的命令集(cvs commit, cvs update和cvs checkout)和其它一些Git: 命令集很丰富, 并且和CVS不兼容Mercurial: 尝试模仿CVS交互方式, 但是偏离了基于不同的设计的意图Subversion: 类CVS的命令集, 能够很容易被CVS用户使用 网络支持CVS: 好. cvs在不同的场合使用不同的协议. 协议能够通过ssh链接的加密隧道进行Git: 非常棒. 能够使用本地的git协议, 但也能在rsync, ssh, HTTP和HTTPS上使用Mercurial: 非常棒. 使用HTTP或ssh. 远程访问会非常安全, 在只读网络里不需要上锁Subversion: 非常好. Subversion服务器支持WebDAV+DeltaV(基于HTTP或HTTPS)作为底层协议, 或者它自身的协议同样能在ssh链接通道里使用. 可移植性CVS: 好. 客户端能在UNIX, Windows和Mac OS上使用. 服务器端能在UNIX, 附有UNIX模拟层的Windows上使用Git: 客户端运行在大多数的UNIX系统上, 但没有MS-Windows本地程序. 基于cygwin的系统看起来也能使用Mercurial: 非常棒. 运行在基于所有能运行python的平台.仓库是兼容性的基于CPU结构和字节序的Subversion: 非常好. 客户端和服务器端都能在UNIX, Windows和Mac OS X上运行 web接口CVS: 是的. CVSweb, ViewVC, Chora和wwCVSGit: 是的. Gitweb包含在发布包中Mercurial: 是的. Web接口是内置组件Subversion: 是的. ViewVC, SVN::Web, WebSVN, ViewSVN, mod_svn_view, Chora, Trac, SVN::RaWeb::Light, SVN Browser, Insurrection和perl_svn.另外, Subversion的apache服务也提供了一个基础的web接口 图形用户界面CVS: 非常好. 有很多图形界面可以用: WinCVS, Cervisia(对于KDE), TortoiseCVS(Windows浏览器插件)Git: Gitk包含在发行版中. Qqit和Git-gui工具也可使用Mercurial: 通过hgit扩展查看历史; 检入扩展(hgct)使得提交很容易. 一些第三方的IDEs和GUI工具(如eric3, meld)有一些集成的Mercurial支持Subversion: 非常好. 有很多GUIs可用: RapidSVN(跨平台), TortoiseSVN(Windows浏览器插件), Jsvn(java), 等. 大多数都还在开发中","tags":[{"name":"软件开发","slug":"软件开发","permalink":"http://vioren.space/tags/软件开发/"}]},{"title":"信条","date":"2015-12-04T07:35:06.000Z","path":"archives/motto/","text":"我可以划船不用桨，我可以扬帆没有风向，因为我这一生，全靠浪。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://vioren.space/tags/随笔/"}]}]